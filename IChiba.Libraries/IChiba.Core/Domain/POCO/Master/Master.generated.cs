//---------------------------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated by T4Model template for T4 (https://github.com/linq2db/linq2db).
//    Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------------------------------

#pragma warning disable 1591

using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;

using IChiba.Core.Domain.Localization;

using LinqToDB;
using LinqToDB.Common;
using LinqToDB.Data;
using LinqToDB.Mapping;

namespace IChiba.Core.Domain.Master
{
	/// <summary>
	/// Database       : IC_EXPRESS_MASTER_DATA
	/// Data Source    : db.ichibaexpress.com,1436
	/// Server Version : 15.00.2000
	/// </summary>
	public partial class MasterDataConnection : LinqToDB.Data.DataConnection
	{
		public ITable<Airline>              Airlines              { get { return this.GetTable<Airline>(); } }
		public ITable<Bank>                 Banks                 { get { return this.GetTable<Bank>(); } }
		public ITable<BankAccount>          BankAccounts          { get { return this.GetTable<BankAccount>(); } }
		public ITable<BankBranch>           BankBranches          { get { return this.GetTable<BankBranch>(); } }
		public ITable<CargoAddService>      CargoAddServices      { get { return this.GetTable<CargoAddService>(); } }
		public ITable<CargoSPService>       CargoSPServices       { get { return this.GetTable<CargoSPService>(); } }
		public ITable<ChargesGroup>         ChargesGroups         { get { return this.GetTable<ChargesGroup>(); } }
		public ITable<ChargesType>          ChargesTypes          { get { return this.GetTable<ChargesType>(); } }
		public ITable<Commodity>            Commodities           { get { return this.GetTable<Commodity>(); } }
		public ITable<CommodityGroup>       CommodityGroups       { get { return this.GetTable<CommodityGroup>(); } }
		public ITable<Consignee>            Consignees            { get { return this.GetTable<Consignee>(); } }
		public ITable<Country>              Countries             { get { return this.GetTable<Country>(); } }
		public ITable<Currency>             Currencies            { get { return this.GetTable<Currency>(); } }
		public ITable<CustomAgent>          CustomAgents          { get { return this.GetTable<CustomAgent>(); } }
		public ITable<DeliveryTime>         DeliveryTimes         { get { return this.GetTable<DeliveryTime>(); } }
		public ITable<District>             Districts             { get { return this.GetTable<District>(); } }
		public ITable<EventType>            EventTypes            { get { return this.GetTable<EventType>(); } }
		public ITable<ForwardingAgent>      ForwardingAgents      { get { return this.GetTable<ForwardingAgent>(); } }
		public ITable<GenericAttribute>     GenericAttributes     { get { return this.GetTable<GenericAttribute>(); } }
		public ITable<GlobalZone>           GlobalZones           { get { return this.GetTable<GlobalZone>(); } }
		public ITable<Incoterm>             Incoterms             { get { return this.GetTable<Incoterm>(); } }
		public ITable<Language>             Languages             { get { return this.GetTable<Language>(); } }
		public ITable<LocaleStringResource> LocaleStringResources { get { return this.GetTable<LocaleStringResource>(); } }
		public ITable<LocalizedProperty>    LocalizedProperties   { get { return this.GetTable<LocalizedProperty>(); } }
		public ITable<MeasureDimension>     MeasureDimensions     { get { return this.GetTable<MeasureDimension>(); } }
		public ITable<MeasureWeight>        MeasureWeights        { get { return this.GetTable<MeasureWeight>(); } }
		public ITable<PackageType>          PackageTypes          { get { return this.GetTable<PackageType>(); } }
		public ITable<PaymentMethod>        PaymentMethods        { get { return this.GetTable<PaymentMethod>(); } }
		public ITable<PaymentTerm>          PaymentTerms          { get { return this.GetTable<PaymentTerm>(); } }
		public ITable<Port>                 Ports                 { get { return this.GetTable<Port>(); } }
		public ITable<PostOffice>           PostOffices           { get { return this.GetTable<PostOffice>(); } }
		public ITable<QuantityUnit>         QuantityUnits         { get { return this.GetTable<QuantityUnit>(); } }
		public ITable<Setting>              Settings              { get { return this.GetTable<Setting>(); } }
		public ITable<Shipper>              Shippers              { get { return this.GetTable<Shipper>(); } }
		public ITable<ShippingAgent>        ShippingAgents        { get { return this.GetTable<ShippingAgent>(); } }
		public ITable<ShippingLine>         ShippingLines         { get { return this.GetTable<ShippingLine>(); } }
		public ITable<SPAddress>            SPAddresses           { get { return this.GetTable<SPAddress>(); } }
		public ITable<SPBilling>            SPBillings            { get { return this.GetTable<SPBilling>(); } }
		public ITable<SPCustomer>           SPCustomers           { get { return this.GetTable<SPCustomer>(); } }
		public ITable<SPMeasurement>        SPMeasurements        { get { return this.GetTable<SPMeasurement>(); } }
		public ITable<SPMoveType>           SPMoveTypes           { get { return this.GetTable<SPMoveType>(); } }
		public ITable<SPProductType>        SPProductTypes        { get { return this.GetTable<SPProductType>(); } }
		public ITable<SPSpecialServiceType> SPSpecialServiceTypes { get { return this.GetTable<SPSpecialServiceType>(); } }
		public ITable<StateProvince>        StateProvinces        { get { return this.GetTable<StateProvince>(); } }
		public ITable<Trucker>              Truckers              { get { return this.GetTable<Trucker>(); } }
		public ITable<User>                 Users                 { get { return this.GetTable<User>(); } }
		public ITable<VatPercentage>        VatPercentages        { get { return this.GetTable<VatPercentage>(); } }
		public ITable<VatType>              VatTypes              { get { return this.GetTable<VatType>(); } }
		public ITable<Vendor>               Vendors               { get { return this.GetTable<Vendor>(); } }
		public ITable<Vessel>               Vessels               { get { return this.GetTable<Vessel>(); } }
		public ITable<Ward>                 Wards                 { get { return this.GetTable<Ward>(); } }
		public ITable<Warehouse>            Warehouses            { get { return this.GetTable<Warehouse>(); } }

		public MasterDataConnection()
		{
			InitDataContext();
			InitMappingSchema();
		}

		public MasterDataConnection(string configuration)
			: base(configuration)
		{
			InitDataContext();
			InitMappingSchema();
		}

		partial void InitDataContext  ();
		partial void InitMappingSchema();
	}

	[Serializable]
	[Table(Schema="lst", Name="Airline")]
	public partial class Airline : BaseEntity, ILocalizedEntity
	{
		[Column, NotNull    ] public string Code         { get; set; } // nvarchar(50)
		[Column, NotNull    ] public string Prefix       { get; set; } // nvarchar(10)
		[Column,    Nullable] public string IATA         { get; set; } // nvarchar(10)
		[Column,    Nullable] public string ICAO         { get; set; } // nvarchar(10)
		[Column, NotNull    ] public string Name         { get; set; } // nvarchar(255)
		[Column,    Nullable] public string LocalName    { get; set; } // nvarchar(255)
		[Column,    Nullable] public string Website      { get; set; } // nvarchar(500)
		[Column,    Nullable] public string Logo         { get; set; } // nvarchar(1000)
		[Column,    Nullable] public string Note         { get; set; } // nvarchar(500)
		[Column, NotNull    ] public bool   Active       { get; set; } // bit
		[Column, NotNull    ] public int    DisplayOrder { get; set; } // int
	}

	[Serializable]
	[Table(Schema="acc", Name="Bank")]
	public partial class Bank : BaseEntity, ILocalizedEntity
	{
		[Column, NotNull    ] public string Code         { get; set; } // nvarchar(50)
		[Column, NotNull    ] public string Name         { get; set; } // nvarchar(255)
		[Column, NotNull    ] public string ShortName    { get; set; } // nvarchar(100)
		[Column,    Nullable] public string SwiftCode    { get; set; } // nvarchar(50)
		[Column,    Nullable] public string Logo         { get; set; } // nvarchar(max)
		[Column,    Nullable] public string Note         { get; set; } // nvarchar(500)
		[Column, NotNull    ] public bool   Active       { get; set; } // bit
		[Column, NotNull    ] public int    DisplayOrder { get; set; } // int

		#region Associations

		/// <summary>
		/// FK_BankAccounts_PK_Bank_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="BankId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<BankAccount> BankAccounts { get; set; }

		/// <summary>
		/// FK_BankBranches_PK_Bank_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="BankId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<BankBranch> BankBranches { get; set; }

		/// <summary>
		/// FK_SPBillings_PK_Bank_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="BankId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<SPBilling> SPBillings { get; set; }

		#endregion
	}

	[Serializable]
	[Table(Schema="acc", Name="BankAccount")]
	public partial class BankAccount : BaseEntity, ILocalizedEntity
	{
		[Column,    Nullable] public string AccountMasterId { get; set; } // varchar(50)
		[Column, NotNull    ] public string BankId          { get; set; } // varchar(50)
		[Column,    Nullable] public string BankBranchId    { get; set; } // varchar(50)
		[Column, NotNull    ] public string AccountNumber   { get; set; } // nvarchar(50)
		[Column, NotNull    ] public string CurrencyId      { get; set; } // varchar(50)
		[Column, NotNull    ] public string Name            { get; set; } // nvarchar(255)
		[Column,    Nullable] public string LocalName       { get; set; } // nvarchar(255)
		[Column,    Nullable] public string IBAN            { get; set; } // nvarchar(50)
		[Column,    Nullable] public string VatNumber       { get; set; } // nvarchar(50)
		[Column,    Nullable] public string Note            { get; set; } // nvarchar(500)
		[Column, NotNull    ] public bool   Active          { get; set; } // bit

		#region Associations

		/// <summary>
		/// FK_BankAccounts_PK_Bank
		/// </summary>
		[Association(ThisKey="BankId", OtherKey="Id", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK_BankAccounts_PK_Bank", BackReferenceName="BankAccounts")]
		public Bank Bank { get; set; }

		/// <summary>
		/// FK_BankAccounts_PK_BankBranch
		/// </summary>
		[Association(ThisKey="BankBranchId", OtherKey="Id", CanBeNull=true, Relationship=Relationship.ManyToOne, KeyName="FK_BankAccounts_PK_BankBranch", BackReferenceName="BankAccounts")]
		public BankBranch BankBranch { get; set; }

		/// <summary>
		/// FK_BankAccounts_PK_Currency
		/// </summary>
		[Association(ThisKey="CurrencyId", OtherKey="Id", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK_BankAccounts_PK_Currency", BackReferenceName="BankAccounts")]
		public Currency Currency { get; set; }

		#endregion
	}

	[Serializable]
	[Table(Schema="acc", Name="BankBranch")]
	public partial class BankBranch : BaseEntity, ILocalizedEntity
	{
		[Column, NotNull    ] public string BankId          { get; set; } // varchar(50)
		[Column, NotNull    ] public string Name            { get; set; } // nvarchar(255)
		[Column,    Nullable] public string SwiftCode       { get; set; } // nvarchar(50)
		[Column,    Nullable] public string Address         { get; set; } // nvarchar(1000)
		[Column,    Nullable] public string CountryId       { get; set; } // varchar(50)
		[Column,    Nullable] public string StateProvinceId { get; set; } // varchar(50)
		[Column,    Nullable] public string DistrictId      { get; set; } // varchar(50)
		[Column, NotNull    ] public bool   Active          { get; set; } // bit

		#region Associations

		/// <summary>
		/// FK_BankBranches_PK_Bank
		/// </summary>
		[Association(ThisKey="BankId", OtherKey="Id", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK_BankBranches_PK_Bank", BackReferenceName="BankBranches")]
		public Bank Bank { get; set; }

		/// <summary>
		/// FK_BankAccounts_PK_BankBranch_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="BankBranchId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<BankAccount> BankAccounts { get; set; }

		/// <summary>
		/// FK_BankBranches_PK_Country
		/// </summary>
		[Association(ThisKey="CountryId", OtherKey="Id", CanBeNull=true, Relationship=Relationship.ManyToOne, KeyName="FK_BankBranches_PK_Country", BackReferenceName="BankBranches")]
		public Country Country { get; set; }

		/// <summary>
		/// FK_BankBranches_PK_District
		/// </summary>
		[Association(ThisKey="DistrictId", OtherKey="Id", CanBeNull=true, Relationship=Relationship.ManyToOne, KeyName="FK_BankBranches_PK_District", BackReferenceName="BankBranches")]
		public District District { get; set; }

		/// <summary>
		/// FK_SPBillings_PK_BankBranch_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="BankBranchId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<SPBilling> SPBillings { get; set; }

		/// <summary>
		/// FK_BankBranches_PK_StateProvince
		/// </summary>
		[Association(ThisKey="StateProvinceId", OtherKey="Id", CanBeNull=true, Relationship=Relationship.ManyToOne, KeyName="FK_BankBranches_PK_StateProvince", BackReferenceName="BankBranches")]
		public StateProvince StateProvince { get; set; }

		#endregion
	}

	[Serializable]
	[Table(Schema="lst", Name="CargoAddService")]
	public partial class CargoAddService : BaseEntity, ILocalizedEntity
	{
		[Column, NotNull    ] public string Code         { get; set; } // nvarchar(50)
		[Column, NotNull    ] public string Name         { get; set; } // nvarchar(255)
		[Column,    Nullable] public string Note         { get; set; } // nvarchar(500)
		[Column, NotNull    ] public bool   Active       { get; set; } // bit
		[Column, NotNull    ] public int    DisplayOrder { get; set; } // int
	}

	[Serializable]
	[Table(Schema="lst", Name="CargoSPService")]
	public partial class CargoSPService : BaseEntity, ILocalizedEntity
	{
		[Column, NotNull    ] public string Code         { get; set; } // nvarchar(50)
		[Column, NotNull    ] public string Name         { get; set; } // nvarchar(255)
		[Column,    Nullable] public string Note         { get; set; } // nvarchar(500)
		[Column, NotNull    ] public bool   Active       { get; set; } // bit
		[Column, NotNull    ] public int    DisplayOrder { get; set; } // int
	}

	[Serializable]
	[Table(Schema="lst", Name="ChargesGroup")]
	public partial class ChargesGroup : BaseEntity, ILocalizedEntity
	{
		[Column, NotNull    ] public string Code         { get; set; } // nvarchar(50)
		[Column, NotNull    ] public string Name         { get; set; } // nvarchar(255)
		[Column,    Nullable] public string LocalName    { get; set; } // nvarchar(255)
		[Column, NotNull    ] public bool   Active       { get; set; } // bit
		[Column, NotNull    ] public int    DisplayOrder { get; set; } // int

		#region Associations

		/// <summary>
		/// FK_ChargesTypes_PK_ChargesGroup_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="ChargesGroupId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<ChargesType> ChargesTypes { get; set; }

		#endregion
	}

	[Serializable]
	[Table(Schema="lst", Name="ChargesType")]
	public partial class ChargesType : BaseEntity, ILocalizedEntity
	{
		[Column, NotNull    ] public string Code                   { get; set; } // nvarchar(50)
		[Column, NotNull    ] public string Name                   { get; set; } // nvarchar(255)
		[Column,    Nullable] public string LocalName              { get; set; } // nvarchar(255)
		[Column,    Nullable] public string ChargesGroupId         { get; set; } // varchar(50)
		[Column, NotNull    ] public string MeasurementId          { get; set; } // varchar(50)
		[Column,    Nullable] public string ContainerMeasurementId { get; set; } // varchar(50)
		[Column,    Nullable] public string VatTypeId              { get; set; } // varchar(50)
		[Column,    Nullable] public string Description            { get; set; } // nvarchar(max)
		[Column, NotNull    ] public bool   IsReceivable           { get; set; } // bit
		[Column,    Nullable] public string ReceivableCurrencyId   { get; set; } // varchar(50)
		[Column, NotNull    ] public bool   IsPayable              { get; set; } // bit
		[Column,    Nullable] public string PayableCurrencyId      { get; set; } // varchar(50)
		[Column, NotNull    ] public bool   IsCustoms              { get; set; } // bit
		[Column, NotNull    ] public bool   IsExpense              { get; set; } // bit
		[Column, NotNull    ] public bool   IsPickup               { get; set; } // bit
		[Column, NotNull    ] public bool   IsDelivery             { get; set; } // bit
		[Column, NotNull    ] public bool   Air                    { get; set; } // bit
		[Column, NotNull    ] public bool   Ocean                  { get; set; } // bit
		[Column, NotNull    ] public bool   Inland                 { get; set; } // bit
		[Column, NotNull    ] public bool   ForQuote               { get; set; } // bit
		[Column, NotNull    ] public bool   ForShipment            { get; set; } // bit
		[Column, NotNull    ] public bool   ForMaster              { get; set; } // bit
		[Column, NotNull    ] public bool   ForCustoms             { get; set; } // bit
		[Column, NotNull    ] public bool   ForExport              { get; set; } // bit
		[Column, NotNull    ] public bool   ForImport              { get; set; } // bit
		[Column, NotNull    ] public bool   ForDomestic            { get; set; } // bit
		[Column, NotNull    ] public bool   ForDrop                { get; set; } // bit
		[Column, NotNull    ] public bool   Active                 { get; set; } // bit
		[Column, NotNull    ] public int    DisplayOrder           { get; set; } // int

		#region Associations

		/// <summary>
		/// FK_ChargesTypes_PK_ChargesGroup
		/// </summary>
		[Association(ThisKey="ChargesGroupId", OtherKey="Id", CanBeNull=true, Relationship=Relationship.ManyToOne, KeyName="FK_ChargesTypes_PK_ChargesGroup", BackReferenceName="ChargesTypes")]
		public ChargesGroup ChargesGroup { get; set; }

		/// <summary>
		/// FK_ContChargesTypes_PK_ContMeasurement
		/// </summary>
		[Association(ThisKey="ContainerMeasurementId", OtherKey="Id", CanBeNull=true, Relationship=Relationship.ManyToOne, KeyName="FK_ContChargesTypes_PK_ContMeasurement", BackReferenceName="ContChargesTypes")]
		public SPMeasurement ContMeasurement { get; set; }

		/// <summary>
		/// FK_ChargesTypes_PK_Measurement
		/// </summary>
		[Association(ThisKey="MeasurementId", OtherKey="Id", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK_ChargesTypes_PK_Measurement", BackReferenceName="ChargesTypes")]
		public SPMeasurement Measurement { get; set; }

		/// <summary>
		/// FK_PayChargesTypes_PK_PayCurrency
		/// </summary>
		[Association(ThisKey="PayableCurrencyId", OtherKey="Id", CanBeNull=true, Relationship=Relationship.ManyToOne, KeyName="FK_PayChargesTypes_PK_PayCurrency", BackReferenceName="PayChargesTypes")]
		public Currency PayCurrency { get; set; }

		/// <summary>
		/// FK_RecvChargesTypes_PK_RecvCurrency
		/// </summary>
		[Association(ThisKey="ReceivableCurrencyId", OtherKey="Id", CanBeNull=true, Relationship=Relationship.ManyToOne, KeyName="FK_RecvChargesTypes_PK_RecvCurrency", BackReferenceName="RecvChargesTypes")]
		public Currency RecvCurrency { get; set; }

		/// <summary>
		/// FK_ChargesTypes_PK_VatType
		/// </summary>
		[Association(ThisKey="VatTypeId", OtherKey="Id", CanBeNull=true, Relationship=Relationship.ManyToOne, KeyName="FK_ChargesTypes_PK_VatType", BackReferenceName="ChargesTypes")]
		public VatType VatType { get; set; }

		#endregion
	}

	[Serializable]
	[Table(Schema="lst", Name="Commodity")]
	public partial class Commodity : BaseEntity, ILocalizedEntity
	{
		[Column, NotNull    ] public string Code             { get; set; } // nvarchar(50)
		[Column, NotNull    ] public string Name             { get; set; } // nvarchar(255)
		[Column,    Nullable] public string LocalName        { get; set; } // nvarchar(255)
		[Column,    Nullable] public string Description      { get; set; } // nvarchar(4000)
		[Column, NotNull    ] public string CommodityGroupId { get; set; } // varchar(50)
		[Column, NotNull    ] public bool   Active           { get; set; } // bit
		[Column, NotNull    ] public int    DisplayOrder     { get; set; } // int

		#region Associations

		/// <summary>
		/// FK_Commodities_PK_CommodityGroup
		/// </summary>
		[Association(ThisKey="CommodityGroupId", OtherKey="Id", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK_Commodities_PK_CommodityGroup", BackReferenceName="Commodities")]
		public CommodityGroup CommodityGroup { get; set; }

		#endregion
	}

	[Serializable]
	[Table(Schema="lst", Name="CommodityGroup")]
	public partial class CommodityGroup : BaseEntity, ILocalizedEntity
	{
		[Column, NotNull    ] public string Code         { get; set; } // nvarchar(50)
		[Column, NotNull    ] public string Name         { get; set; } // nvarchar(255)
		[Column,    Nullable] public string LocalName    { get; set; } // nvarchar(255)
		[Column,    Nullable] public string Description  { get; set; } // nvarchar(4000)
		[Column, NotNull    ] public bool   Active       { get; set; } // bit
		[Column, NotNull    ] public int    DisplayOrder { get; set; } // int

		#region Associations

		/// <summary>
		/// FK_Commodities_PK_CommodityGroup_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="CommodityGroupId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<Commodity> Commodities { get; set; }

		#endregion
	}

	[Serializable]
	[Table(Schema="lst", Name="Consignee")]
	public partial class Consignee : BaseEntity, ILocalizedEntity
	{
		[Column, NotNull    ] public string Code            { get; set; } // nvarchar(50)
		[Column, NotNull    ] public string Name            { get; set; } // nvarchar(255)
		[Column,    Nullable] public string LocalName       { get; set; } // nvarchar(255)
		[Column,    Nullable] public string VatNumber       { get; set; } // nvarchar(50)
		[Column,    Nullable] public string PaymentTermId   { get; set; } // varchar(50)
		[Column,    Nullable] public int?   StorageFreeDays { get; set; } // int
		[Column,    Nullable] public string Website         { get; set; } // nvarchar(500)
		[Column, NotNull    ] public bool   Active          { get; set; } // bit

		#region Associations

		/// <summary>
		/// FK_Consignees_PK_PaymentTerm
		/// </summary>
		[Association(ThisKey="PaymentTermId", OtherKey="Id", CanBeNull=true, Relationship=Relationship.ManyToOne, KeyName="FK_Consignees_PK_PaymentTerm", BackReferenceName="Consignees")]
		public PaymentTerm PaymentTerm { get; set; }

		#endregion
	}

	[Serializable]
	[Table(Schema="lst", Name="Country")]
	public partial class Country : BaseEntity, ILocalizedEntity
	{
		[Column, NotNull    ] public string Code         { get; set; } // nvarchar(50)
		[Column, NotNull    ] public string Name         { get; set; } // nvarchar(255)
		[Column,    Nullable] public string ShortName    { get; set; } // nvarchar(100)
		[Column,    Nullable] public string LocalName    { get; set; } // nvarchar(255)
		[Column, NotNull    ] public string GlobalZoneId { get; set; } // varchar(50)
		[Column,    Nullable] public string Note         { get; set; } // nvarchar(500)
		[Column, NotNull    ] public bool   Active       { get; set; } // bit
		[Column, NotNull    ] public int    DisplayOrder { get; set; } // int

		#region Associations

		/// <summary>
		/// FK_BankBranches_PK_Country_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="CountryId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<BankBranch> BankBranches { get; set; }

		/// <summary>
		/// FK_Districts_PK_Country_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="CountryId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<District> Districts { get; set; }

		/// <summary>
		/// FK_Countries_PK_GlobalZone
		/// </summary>
		[Association(ThisKey="GlobalZoneId", OtherKey="Id", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK_Countries_PK_GlobalZone", BackReferenceName="Countries")]
		public GlobalZone GlobalZone { get; set; }

		/// <summary>
		/// FK_Ports_PK_Country_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="CountryId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<Port> Ports { get; set; }

		/// <summary>
		/// FK_SPAddresses_PK_Country_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="CountryId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<SPAddress> SPAddresses { get; set; }

		/// <summary>
		/// FK_StateProvinces_PK_Country_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="CountryId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<StateProvince> StateProvinces { get; set; }

		/// <summary>
		/// FK_Vessels_PK_Country_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="CountryId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<Vessel> Vessels { get; set; }

		/// <summary>
		/// FK_Wards_PK_Country_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="CountryId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<Ward> Wards { get; set; }

		#endregion
	}

	[Serializable]
	[Table(Schema="system", Name="Currency")]
	public partial class Currency : BaseEntity, ILocalizedEntity
	{
		[Column, NotNull    ] public string   Name             { get; set; } // nvarchar(50)
		[Column, NotNull    ] public string   CurrencyCode     { get; set; } // nvarchar(5)
		[Column, NotNull    ] public decimal  Rate             { get; set; } // decimal(18, 8)
		[Column,    Nullable] public string   DisplayLocale    { get; set; } // nvarchar(50)
		[Column,    Nullable] public string   CustomFormatting { get; set; } // nvarchar(50)
		[Column, NotNull    ] public bool     Published        { get; set; } // bit
		[Column, NotNull    ] public int      DisplayOrder     { get; set; } // int
		[Column, NotNull    ] public DateTime CreatedOnUtc     { get; set; } // datetime
		[Column, NotNull    ] public DateTime UpdatedOnUtc     { get; set; } // datetime

		#region Associations

		/// <summary>
		/// FK_BankAccounts_PK_Currency_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="CurrencyId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<BankAccount> BankAccounts { get; set; }

		/// <summary>
		/// FK_PayChargesTypes_PK_PayCurrency_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="PayableCurrencyId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<ChargesType> PayChargesTypes { get; set; }

		/// <summary>
		/// FK_RecvChargesTypes_PK_RecvCurrency_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="ReceivableCurrencyId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<ChargesType> RecvChargesTypes { get; set; }

		/// <summary>
		/// FK_SPBillings_PK_Currency_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="InvoiceCurrencyId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<SPBilling> SPBillings { get; set; }

		#endregion
	}

	[Serializable]
	[Table(Schema="lst", Name="CustomAgent")]
	public partial class CustomAgent : BaseEntity, ILocalizedEntity
	{
		[Column, NotNull    ] public string Code      { get; set; } // nvarchar(50)
		[Column, NotNull    ] public string Name      { get; set; } // nvarchar(255)
		[Column,    Nullable] public string LocalName { get; set; } // nvarchar(255)
		[Column,    Nullable] public string Website   { get; set; } // nvarchar(500)
		[Column,    Nullable] public string Note      { get; set; } // nvarchar(500)
		[Column, NotNull    ] public bool   Active    { get; set; } // bit
	}

	[Serializable]
	[Table(Schema="lst", Name="DeliveryTime")]
	public partial class DeliveryTime : BaseEntity, ILocalizedEntity
	{
		[Column, NotNull    ] public string   Code         { get; set; } // nvarchar(50)
		[Column, NotNull    ] public string   Name         { get; set; } // nvarchar(255)
		[Column, NotNull    ] public decimal  MinValue     { get; set; } // decimal(18, 4)
		[Column,    Nullable] public decimal? MaxValue     { get; set; } // decimal(18, 4)
		[Column, NotNull    ] public int      TimeUnit     { get; set; } // int
		[Column,    Nullable] public string   Note         { get; set; } // nvarchar(500)
		[Column, NotNull    ] public bool     Active       { get; set; } // bit
		[Column, NotNull    ] public int      DisplayOrder { get; set; } // int
	}

	[Serializable]
	[Table(Schema="lst", Name="District")]
	public partial class District : BaseEntity, ILocalizedEntity
	{
		[Column, NotNull    ] public string Code            { get; set; } // nvarchar(50)
		[Column, NotNull    ] public string Name            { get; set; } // nvarchar(255)
		[Column,    Nullable] public string ShortName       { get; set; } // nvarchar(100)
		[Column, NotNull    ] public string CountryId       { get; set; } // varchar(50)
		[Column, NotNull    ] public string StateProvinceId { get; set; } // varchar(50)
		[Column,    Nullable] public string Note            { get; set; } // nvarchar(500)
		[Column, NotNull    ] public bool   Active          { get; set; } // bit

		#region Associations

		/// <summary>
		/// FK_BankBranches_PK_District_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="DistrictId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<BankBranch> BankBranches { get; set; }

		/// <summary>
		/// FK_Districts_PK_Country
		/// </summary>
		[Association(ThisKey="CountryId", OtherKey="Id", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK_Districts_PK_Country", BackReferenceName="Districts")]
		public Country Country { get; set; }

		/// <summary>
		/// FK_SPAddresses_PK_District_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="DistrictId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<SPAddress> SPAddresses { get; set; }

		/// <summary>
		/// FK_Districts_PK_StateProvince
		/// </summary>
		[Association(ThisKey="StateProvinceId", OtherKey="Id", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK_Districts_PK_StateProvince", BackReferenceName="Districts")]
		public StateProvince StateProvince { get; set; }

		/// <summary>
		/// FK_Wards_PK_District_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="DistrictId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<Ward> Wards { get; set; }

		#endregion
	}

	[Serializable]
	[Table(Schema="lst", Name="EventType")]
	public partial class EventType : BaseEntity, ILocalizedEntity
	{
		[Column, NotNull    ] public string Code      { get; set; } // nvarchar(50)
		[Column, NotNull    ] public string Name      { get; set; } // nvarchar(255)
		[Column,    Nullable] public string LocalName { get; set; } // nvarchar(255)
		[Column,    Nullable] public string Note      { get; set; } // nvarchar(max)
		[Column, NotNull    ] public bool   Active    { get; set; } // bit
	}

	[Serializable]
	[Table(Schema="lst", Name="ForwardingAgent")]
	public partial class ForwardingAgent : BaseEntity, ILocalizedEntity
	{
		[Column, NotNull    ] public string Code            { get; set; } // nvarchar(50)
		[Column, NotNull    ] public string Name            { get; set; } // nvarchar(255)
		[Column,    Nullable] public string LocalName       { get; set; } // nvarchar(255)
		[Column,    Nullable] public string IATA            { get; set; } // nvarchar(10)
		[Column,    Nullable] public string CASS            { get; set; } // nvarchar(50)
		[Column,    Nullable] public int?   StorageFreeDays { get; set; } // int
		[Column,    Nullable] public string Website         { get; set; } // nvarchar(500)
		[Column,    Nullable] public string Note            { get; set; } // nvarchar(500)
		[Column, NotNull    ] public bool   Active          { get; set; } // bit
	}

	[Serializable]
	[Table(Schema="system", Name="GenericAttribute")]
	public partial class GenericAttribute : BaseEntity
	{
		[Column, NotNull] public int    EntityId { get; set; } // int
		[Column, NotNull] public string KeyGroup { get; set; } // nvarchar(400)
		[Column, NotNull] public string Key      { get; set; } // nvarchar(400)
		[Column, NotNull] public string Value    { get; set; } // nvarchar(max)
		[Column, NotNull] public int    AppId    { get; set; } // int
	}

	[Serializable]
	[Table(Schema="lst", Name="GlobalZone")]
	public partial class GlobalZone : BaseEntity, ILocalizedEntity
	{
		[Column, NotNull    ] public string Code      { get; set; } // nvarchar(50)
		[Column, NotNull    ] public string Name      { get; set; } // nvarchar(255)
		[Column,    Nullable] public string LocalName { get; set; } // nvarchar(255)
		[Column,    Nullable] public string Note      { get; set; } // nvarchar(500)
		[Column, NotNull    ] public bool   Active    { get; set; } // bit

		#region Associations

		/// <summary>
		/// FK_Countries_PK_GlobalZone_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="GlobalZoneId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<Country> Countries { get; set; }

		#endregion
	}

	[Serializable]
	[Table(Schema="lst", Name="Incoterm")]
	public partial class Incoterm : BaseEntity, ILocalizedEntity
	{
		[Column, NotNull    ] public string Code                      { get; set; } // nvarchar(255)
		[Column, NotNull    ] public string Name                      { get; set; } // nvarchar(255)
		[Column,    Nullable] public string LocalName                 { get; set; } // nvarchar(255)
		[Column, NotNull    ] public int    FreightPaymentMethod      { get; set; } // int
		[Column, NotNull    ] public int    OtherChargesPaymentMethod { get; set; } // int
		[Column,    Nullable] public string Note                      { get; set; } // nvarchar(max)
		[Column, NotNull    ] public bool   Active                    { get; set; } // bit
	}

	[Serializable]
	[Table(Schema="system", Name="Language")]
	public partial class Language : BaseEntity
	{
		[Column, NotNull    ] public string Name                  { get; set; } // nvarchar(100)
		[Column, NotNull    ] public string LanguageCulture       { get; set; } // nvarchar(20)
		[Column,    Nullable] public string TwoLetterLanguageCode { get; set; } // nvarchar(2)
		[Column,    Nullable] public string TwoLetterCountryCode  { get; set; } // nvarchar(2)
		[Column, NotNull    ] public bool   Rtl                   { get; set; } // bit
		[Column, NotNull    ] public bool   Published             { get; set; } // bit
		[Column, NotNull    ] public int    DisplayOrder          { get; set; } // int

		#region Associations

		/// <summary>
		/// FK_LocaleStringResources_PK_Language_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="LanguageId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<LocaleStringResource> LocaleStringResources { get; set; }

		/// <summary>
		/// FK_LocalizedProperties_PK_Language_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="LanguageId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<LocalizedProperty> LocalizedProperties { get; set; }

		#endregion
	}

	[Serializable]
	[Table(Schema="system", Name="LocaleStringResource")]
	public partial class LocaleStringResource : BaseEntity
	{
		[Column, NotNull] public string LanguageId    { get; set; } // varchar(50)
		[Column, NotNull] public string ResourceName  { get; set; } // nvarchar(200)
		[Column, NotNull] public string ResourceValue { get; set; } // nvarchar(max)

		#region Associations

		/// <summary>
		/// FK_LocaleStringResources_PK_Language
		/// </summary>
		[Association(ThisKey="LanguageId", OtherKey="Id", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK_LocaleStringResources_PK_Language", BackReferenceName="LocaleStringResources")]
		public Language Language { get; set; }

		#endregion
	}

	[Serializable]
	[Table(Schema="system", Name="LocalizedProperty")]
	public partial class LocalizedProperty : BaseEntity
	{
		[Column, NotNull] public string LanguageId     { get; set; } // varchar(50)
		[Column, NotNull] public string EntityId       { get; set; } // varchar(50)
		[Column, NotNull] public string LocaleKeyGroup { get; set; } // nvarchar(400)
		[Column, NotNull] public string LocaleKey      { get; set; } // nvarchar(400)
		[Column, NotNull] public string LocaleValue    { get; set; } // nvarchar(max)

		#region Associations

		/// <summary>
		/// FK_LocalizedProperties_PK_Language
		/// </summary>
		[Association(ThisKey="LanguageId", OtherKey="Id", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK_LocalizedProperties_PK_Language", BackReferenceName="LocalizedProperties")]
		public Language Language { get; set; }

		#endregion
	}

	[Serializable]
	[Table(Schema="system", Name="MeasureDimension")]
	public partial class MeasureDimension : BaseEntity, ILocalizedEntity
	{
		[Column, NotNull    ] public string  Code         { get; set; } // nvarchar(50)
		[Column, NotNull    ] public string  Name         { get; set; } // nvarchar(50)
		[Column, NotNull    ] public decimal Ratio        { get; set; } // decimal(18, 8)
		[Column,    Nullable] public string  Note         { get; set; } // nvarchar(500)
		[Column, NotNull    ] public bool    Active       { get; set; } // bit
		[Column, NotNull    ] public int     DisplayOrder { get; set; } // int
	}

	[Serializable]
	[Table(Schema="system", Name="MeasureWeight")]
	public partial class MeasureWeight : BaseEntity, ILocalizedEntity
	{
		[Column, NotNull    ] public string  Code         { get; set; } // nvarchar(50)
		[Column, NotNull    ] public string  Name         { get; set; } // nvarchar(50)
		[Column, NotNull    ] public decimal Ratio        { get; set; } // decimal(18, 8)
		[Column,    Nullable] public string  Note         { get; set; } // nvarchar(500)
		[Column, NotNull    ] public bool    Active       { get; set; } // bit
		[Column, NotNull    ] public int     DisplayOrder { get; set; } // int
	}

	[Serializable]
	[Table(Schema="lst", Name="PackageType")]
	public partial class PackageType : BaseEntity, ILocalizedEntity
	{
		[Column, NotNull    ] public string   Code          { get; set; } // nvarchar(50)
		[Column, NotNull    ] public string   Name          { get; set; } // nvarchar(255)
		[Column,    Nullable] public string   LocalName     { get; set; } // nvarchar(255)
		[Column,    Nullable] public decimal? TEU           { get; set; } // decimal(18, 4)
		[Column,    Nullable] public int?     ContainerSize { get; set; } // int
		[Column,    Nullable] public decimal? Volume        { get; set; } // decimal(18, 4)
		[Column, NotNull    ] public string   PrintAs       { get; set; } // nvarchar(20)
		[Column, NotNull    ] public bool     IsContainer   { get; set; } // bit
		[Column, NotNull    ] public bool     Refrigerated  { get; set; } // bit
		[Column, NotNull    ] public bool     Vehicle       { get; set; } // bit
		[Column, NotNull    ] public bool     Air           { get; set; } // bit
		[Column, NotNull    ] public bool     Ocean         { get; set; } // bit
		[Column, NotNull    ] public bool     Inland        { get; set; } // bit
		[Column,    Nullable] public string   Note          { get; set; } // nvarchar(500)
		[Column, NotNull    ] public bool     Active        { get; set; } // bit
	}

	[Serializable]
	[Table(Schema="lst", Name="PaymentMethod")]
	public partial class PaymentMethod : BaseEntity, ILocalizedEntity
	{
		[Column, NotNull    ] public string Code         { get; set; } // nvarchar(50)
		[Column, NotNull    ] public string Name         { get; set; } // nvarchar(255)
		[Column, NotNull    ] public bool   EnabledARPay { get; set; } // bit
		[Column, NotNull    ] public bool   EnabledAPPay { get; set; } // bit
		[Column,    Nullable] public string Note         { get; set; } // nvarchar(500)
		[Column, NotNull    ] public bool   Active       { get; set; } // bit
		[Column, NotNull    ] public int    DisplayOrder { get; set; } // int
	}

	[Serializable]
	[Table(Schema="lst", Name="PaymentTerm")]
	public partial class PaymentTerm : BaseEntity, ILocalizedEntity
	{
		[Column, NotNull    ] public string Code         { get; set; } // nvarchar(255)
		[Column, NotNull    ] public string Name         { get; set; } // nvarchar(255)
		[Column,    Nullable] public string LocalName    { get; set; } // nvarchar(255)
		[Column, NotNull    ] public bool   CurrentMonth { get; set; } // bit
		[Column, NotNull    ] public int    FromDateType { get; set; } // int
		[Column,    Nullable] public int?   Days         { get; set; } // int
		[Column,    Nullable] public string Description  { get; set; } // nvarchar(1000)
		[Column, NotNull    ] public bool   Active       { get; set; } // bit
		[Column, NotNull    ] public int    DisplayOrder { get; set; } // int

		#region Associations

		/// <summary>
		/// FK_Consignees_PK_PaymentTerm_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="PaymentTermId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<Consignee> Consignees { get; set; }

		/// <summary>
		/// FK_Shippers_PK_PaymentTerm_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="PaymentTermId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<Shipper> Shippers { get; set; }

		/// <summary>
		/// FK_SPBillings_PK_PaymentTerm_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="PaymentTermId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<SPBilling> SPBillings { get; set; }

		/// <summary>
		/// FK_SPCustomers_PK_PaymentTerm_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="PaymentTermId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<SPCustomer> SPCustomers { get; set; }

		#endregion
	}

	[Serializable]
	[Table(Schema="lst", Name="Port")]
	public partial class Port : BaseEntity, ILocalizedEntity
	{
		[Column, NotNull    ] public string Code            { get; set; } // nvarchar(50)
		[Column, NotNull    ] public string Name            { get; set; } // nvarchar(255)
		[Column,    Nullable] public string ShortName       { get; set; } // nvarchar(100)
		[Column,    Nullable] public string LocalName       { get; set; } // nvarchar(255)
		[Column, NotNull    ] public bool   Air             { get; set; } // bit
		[Column, NotNull    ] public bool   Ocean           { get; set; } // bit
		[Column, NotNull    ] public bool   Inland          { get; set; } // bit
		[Column,    Nullable] public string CountryId       { get; set; } // varchar(50)
		[Column,    Nullable] public string StateProvinceId { get; set; } // varchar(50)
		[Column,    Nullable] public string Note            { get; set; } // nvarchar(500)
		[Column, NotNull    ] public bool   Active          { get; set; } // bit
		[Column, NotNull    ] public int    DisplayOrder    { get; set; } // int

		#region Associations

		/// <summary>
		/// FK_Ports_PK_Country
		/// </summary>
		[Association(ThisKey="CountryId", OtherKey="Id", CanBeNull=true, Relationship=Relationship.ManyToOne, KeyName="FK_Ports_PK_Country", BackReferenceName="Ports")]
		public Country Country { get; set; }

		/// <summary>
		/// FK_Ports_PK_StateProvince
		/// </summary>
		[Association(ThisKey="StateProvinceId", OtherKey="Id", CanBeNull=true, Relationship=Relationship.ManyToOne, KeyName="FK_Ports_PK_StateProvince", BackReferenceName="Ports")]
		public StateProvince StateProvince { get; set; }

		#endregion
	}

	[Serializable]
	[Table(Schema="wh", Name="PostOffice")]
	public partial class PostOffice : BaseEntity, ILocalizedEntity
	{
		[Column, NotNull    ] public string Code        { get; set; } // nvarchar(50)
		[Column, NotNull    ] public string Name        { get; set; } // nvarchar(255)
		[Column,    Nullable] public string LocalName   { get; set; } // nvarchar(255)
		[Column, NotNull    ] public string WarehouseId { get; set; } // varchar(50)
		[Column,    Nullable] public string Note        { get; set; } // nvarchar(max)
		[Column, NotNull    ] public bool   Active      { get; set; } // bit

		#region Associations

		/// <summary>
		/// FK_PostOffices_PK_Warehouse
		/// </summary>
		[Association(ThisKey="WarehouseId", OtherKey="Id", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK_PostOffices_PK_Warehouse", BackReferenceName="PostOffices")]
		public Warehouse Warehouse { get; set; }

		#endregion
	}

	[Serializable]
	[Table(Schema="lst", Name="QuantityUnit")]
	public partial class QuantityUnit : BaseEntity, ILocalizedEntity
	{
		[Column, NotNull    ] public string Code         { get; set; } // nvarchar(50)
		[Column, NotNull    ] public string Name         { get; set; } // nvarchar(50)
		[Column, NotNull    ] public string NamePlural   { get; set; } // nvarchar(50)
		[Column,    Nullable] public string Note         { get; set; } // nvarchar(500)
		[Column, NotNull    ] public bool   Active       { get; set; } // bit
		[Column, NotNull    ] public int    DisplayOrder { get; set; } // int
	}

	[Serializable]
	[Table(Schema="system", Name="Setting")]
	public partial class Setting : BaseEntity, ILocalizedEntity
	{
		[Column, NotNull] public string Name  { get; set; } // nvarchar(400)
		[Column, NotNull] public string Value { get; set; } // nvarchar(max)
	}

	[Serializable]
	[Table(Schema="lst", Name="Shipper")]
	public partial class Shipper : BaseEntity, ILocalizedEntity
	{
		[Column, NotNull    ] public string Code            { get; set; } // nvarchar(50)
		[Column, NotNull    ] public string Name            { get; set; } // nvarchar(255)
		[Column,    Nullable] public string LocalName       { get; set; } // nvarchar(255)
		[Column,    Nullable] public string VatNumber       { get; set; } // nvarchar(50)
		[Column,    Nullable] public string PaymentTermId   { get; set; } // varchar(50)
		[Column,    Nullable] public int?   StorageFreeDays { get; set; } // int
		[Column,    Nullable] public string Website         { get; set; } // nvarchar(500)
		[Column, NotNull    ] public bool   Active          { get; set; } // bit

		#region Associations

		/// <summary>
		/// FK_Shippers_PK_PaymentTerm
		/// </summary>
		[Association(ThisKey="PaymentTermId", OtherKey="Id", CanBeNull=true, Relationship=Relationship.ManyToOne, KeyName="FK_Shippers_PK_PaymentTerm", BackReferenceName="Shippers")]
		public PaymentTerm PaymentTerm { get; set; }

		#endregion
	}

	[Serializable]
	[Table(Schema="lst", Name="ShippingAgent")]
	public partial class ShippingAgent : BaseEntity, ILocalizedEntity
	{
		[Column, NotNull    ] public string Code                   { get; set; } // nvarchar(50)
		[Column, NotNull    ] public string Name                   { get; set; } // nvarchar(255)
		[Column,    Nullable] public string LocalName              { get; set; } // nvarchar(255)
		[Column,    Nullable] public string ForwarderAccountNumber { get; set; } // nvarchar(50)
		[Column,    Nullable] public string ForwarderCreditNumber  { get; set; } // nvarchar(50)
		[Column,    Nullable] public string LocalCustomsCode       { get; set; } // nvarchar(50)
		[Column,    Nullable] public string Website                { get; set; } // nvarchar(500)
		[Column,    Nullable] public string Note                   { get; set; } // nvarchar(500)
		[Column, NotNull    ] public bool   Active                 { get; set; } // bit

		#region Associations

		/// <summary>
		/// FK_ShippingLines_PK_ShippingAgent_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="ShippingAgentId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<ShippingLine> ShippingLines { get; set; }

		#endregion
	}

	[Serializable]
	[Table(Schema="lst", Name="ShippingLine")]
	public partial class ShippingLine : BaseEntity, ILocalizedEntity
	{
		[Column, NotNull    ] public string Code            { get; set; } // nvarchar(50)
		[Column, NotNull    ] public string SCAC            { get; set; } // nvarchar(10)
		[Column, NotNull    ] public string Name            { get; set; } // nvarchar(255)
		[Column,    Nullable] public string LocalName       { get; set; } // nvarchar(255)
		[Column,    Nullable] public string ShippingAgentId { get; set; } // varchar(50)
		[Column,    Nullable] public string Website         { get; set; } // nvarchar(500)
		[Column,    Nullable] public string Note            { get; set; } // nvarchar(max)
		[Column, NotNull    ] public bool   Active          { get; set; } // bit

		#region Associations

		/// <summary>
		/// FK_ShippingLines_PK_ShippingAgent
		/// </summary>
		[Association(ThisKey="ShippingAgentId", OtherKey="Id", CanBeNull=true, Relationship=Relationship.ManyToOne, KeyName="FK_ShippingLines_PK_ShippingAgent", BackReferenceName="ShippingLines")]
		public ShippingAgent ShippingAgent { get; set; }

		#endregion
	}

	[Serializable]
	[Table(Schema="ref", Name="SPAddress")]
	public partial class SPAddress : BaseEntity
	{
		[Column, NotNull    ] public string   EntityId        { get; set; } // varchar(50)
		[Column, NotNull    ] public int      EntityType      { get; set; } // int
		[Column, NotNull    ] public string   EntityTypeText  { get; set; } // nvarchar(255)
		[Column, NotNull    ] public int      Type            { get; set; } // int
		[Column, NotNull    ] public string   AddressName     { get; set; } // nvarchar(255)
		[Column, NotNull    ] public string   FullName        { get; set; } // nvarchar(255)
		[Column, NotNull    ] public string   Email           { get; set; } // nvarchar(255)
		[Column,    Nullable] public string   Company         { get; set; } // nvarchar(255)
		[Column, NotNull    ] public string   CountryId       { get; set; } // varchar(50)
		[Column,    Nullable] public string   StateProvinceId { get; set; } // varchar(50)
		[Column,    Nullable] public string   City            { get; set; } // varchar(255)
		[Column,    Nullable] public string   DistrictId      { get; set; } // varchar(50)
		[Column,    Nullable] public string   WardId          { get; set; } // varchar(50)
		[Column, NotNull    ] public string   Address1        { get; set; } // nvarchar(1000)
		[Column,    Nullable] public string   Address2        { get; set; } // nvarchar(1000)
		[Column, NotNull    ] public string   ZipPostalCode   { get; set; } // nvarchar(50)
		[Column, NotNull    ] public string   PhoneNumber     { get; set; } // nvarchar(255)
		[Column,    Nullable] public string   FaxNumber       { get; set; } // nvarchar(255)
		[Column,    Nullable] public string   Note            { get; set; } // nvarchar(500)
		[Column, NotNull    ] public bool     IsLocalLanguage { get; set; } // bit
		[Column, NotNull    ] public DateTime CreatedOnUtc    { get; set; } // datetime

		#region Associations

		/// <summary>
		/// FK_SPAddresses_PK_Country
		/// </summary>
		[Association(ThisKey="CountryId", OtherKey="Id", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK_SPAddresses_PK_Country", BackReferenceName="SPAddresses")]
		public Country Country { get; set; }

		/// <summary>
		/// FK_SPAddresses_PK_District
		/// </summary>
		[Association(ThisKey="DistrictId", OtherKey="Id", CanBeNull=true, Relationship=Relationship.ManyToOne, KeyName="FK_SPAddresses_PK_District", BackReferenceName="SPAddresses")]
		public District District { get; set; }

		/// <summary>
		/// FK_SPAddresses_PK_StateProvince
		/// </summary>
		[Association(ThisKey="StateProvinceId", OtherKey="Id", CanBeNull=true, Relationship=Relationship.ManyToOne, KeyName="FK_SPAddresses_PK_StateProvince", BackReferenceName="SPAddresses")]
		public StateProvince StateProvince { get; set; }

		/// <summary>
		/// FK_SPAddresses_PK_Ward
		/// </summary>
		[Association(ThisKey="WardId", OtherKey="Id", CanBeNull=true, Relationship=Relationship.ManyToOne, KeyName="FK_SPAddresses_PK_Ward", BackReferenceName="SPAddresses")]
		public Ward Ward { get; set; }

		#endregion
	}

	[Serializable]
	[Table(Schema="ref", Name="SPBilling")]
	public partial class SPBilling : BaseEntity
	{
		[Column, NotNull    ] public string EntityId            { get; set; } // varchar(50)
		[Column, NotNull    ] public int    EntityType          { get; set; } // int
		[Column, NotNull    ] public string EntityTypeText      { get; set; } // nvarchar(255)
		[Column,    Nullable] public string VatNumber           { get; set; } // nvarchar(50)
		[Column,    Nullable] public string PaymentTermId       { get; set; } // varchar(50)
		[Column,    Nullable] public string InvoiceCurrencyId   { get; set; } // varchar(50)
		[Column,    Nullable] public string VatTypeId           { get; set; } // varchar(50)
		[Column, NotNull    ] public bool   ConsolidatedInvoice { get; set; } // bit
		[Column,    Nullable] public string BankId              { get; set; } // varchar(50)
		[Column,    Nullable] public string BankBranchId        { get; set; } // varchar(50)
		[Column,    Nullable] public string BankAccountNumber   { get; set; } // nvarchar(50)
		[Column,    Nullable] public string IBAN                { get; set; } // nvarchar(50)

		#region Associations

		/// <summary>
		/// FK_SPBillings_PK_Bank
		/// </summary>
		[Association(ThisKey="BankId", OtherKey="Id", CanBeNull=true, Relationship=Relationship.ManyToOne, KeyName="FK_SPBillings_PK_Bank", BackReferenceName="SPBillings")]
		public Bank Bank { get; set; }

		/// <summary>
		/// FK_SPBillings_PK_BankBranch
		/// </summary>
		[Association(ThisKey="BankBranchId", OtherKey="Id", CanBeNull=true, Relationship=Relationship.ManyToOne, KeyName="FK_SPBillings_PK_BankBranch", BackReferenceName="SPBillings")]
		public BankBranch BankBranch { get; set; }

		/// <summary>
		/// FK_SPBillings_PK_Currency
		/// </summary>
		[Association(ThisKey="InvoiceCurrencyId", OtherKey="Id", CanBeNull=true, Relationship=Relationship.ManyToOne, KeyName="FK_SPBillings_PK_Currency", BackReferenceName="SPBillings")]
		public Currency Currency { get; set; }

		/// <summary>
		/// FK_SPBillings_PK_PaymentTerm
		/// </summary>
		[Association(ThisKey="PaymentTermId", OtherKey="Id", CanBeNull=true, Relationship=Relationship.ManyToOne, KeyName="FK_SPBillings_PK_PaymentTerm", BackReferenceName="SPBillings")]
		public PaymentTerm PaymentTerm { get; set; }

		/// <summary>
		/// FK_SPBillings_PK_VatType
		/// </summary>
		[Association(ThisKey="VatTypeId", OtherKey="Id", CanBeNull=true, Relationship=Relationship.ManyToOne, KeyName="FK_SPBillings_PK_VatType", BackReferenceName="SPBillings")]
		public VatType VatType { get; set; }

		#endregion
	}

	[Serializable]
	[Table(Schema="lst", Name="SPCustomer")]
	public partial class SPCustomer : BaseEntity, ILocalizedEntity
	{
		[Column, NotNull    ] public string Code            { get; set; } // nvarchar(50)
		[Column, NotNull    ] public string Name            { get; set; } // nvarchar(255)
		[Column,    Nullable] public string LocalName       { get; set; } // nvarchar(255)
		[Column,    Nullable] public string VatNumber       { get; set; } // nvarchar(50)
		[Column,    Nullable] public string PaymentTermId   { get; set; } // varchar(50)
		[Column,    Nullable] public int?   StorageFreeDays { get; set; } // int
		[Column,    Nullable] public string Website         { get; set; } // nvarchar(500)
		[Column, NotNull    ] public bool   Active          { get; set; } // bit

		#region Associations

		/// <summary>
		/// FK_SPCustomers_PK_PaymentTerm
		/// </summary>
		[Association(ThisKey="PaymentTermId", OtherKey="Id", CanBeNull=true, Relationship=Relationship.ManyToOne, KeyName="FK_SPCustomers_PK_PaymentTerm", BackReferenceName="SPCustomers")]
		public PaymentTerm PaymentTerm { get; set; }

		#endregion
	}

	[Serializable]
	[Table(Schema="lst", Name="SPMeasurement")]
	public partial class SPMeasurement : BaseEntity, ILocalizedEntity
	{
		[Column, NotNull    ] public string Code                   { get; set; } // nvarchar(50)
		[Column, NotNull    ] public string Name                   { get; set; } // nvarchar(255)
		[Column,    Nullable] public string LocalName              { get; set; } // nvarchar(255)
		[Column,    Nullable] public string ShortName              { get; set; } // nvarchar(100)
		[Column, NotNull    ] public bool   IsContainer            { get; set; } // bit
		[Column, NotNull    ] public bool   IsContainerMeasurement { get; set; } // bit
		[Column,    Nullable] public string Note                   { get; set; } // nvarchar(500)
		[Column, NotNull    ] public bool   Active                 { get; set; } // bit

		#region Associations

		/// <summary>
		/// FK_ChargesTypes_PK_Measurement_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="MeasurementId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<ChargesType> ChargesTypes { get; set; }

		/// <summary>
		/// FK_ContChargesTypes_PK_ContMeasurement_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="ContainerMeasurementId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<ChargesType> ContChargesTypes { get; set; }

		#endregion
	}

	[Serializable]
	[Table(Schema="lst", Name="SPMoveType")]
	public partial class SPMoveType : BaseEntity, ILocalizedEntity
	{
		[Column, NotNull    ] public string Code      { get; set; } // nvarchar(50)
		[Column, NotNull    ] public string Name      { get; set; } // nvarchar(255)
		[Column,    Nullable] public string LocalName { get; set; } // nvarchar(255)
		[Column, NotNull    ] public bool   Air       { get; set; } // bit
		[Column, NotNull    ] public bool   Ocean     { get; set; } // bit
		[Column, NotNull    ] public bool   Inland    { get; set; } // bit
		[Column, NotNull    ] public bool   Active    { get; set; } // bit
	}

	[Serializable]
	[Table(Schema="lst", Name="SPProductType")]
	public partial class SPProductType : BaseEntity, ILocalizedEntity
	{
		[Column, NotNull] public string Code   { get; set; } // nvarchar(50)
		[Column, NotNull] public string Name   { get; set; } // nvarchar(255)
		[Column, NotNull] public bool   Active { get; set; } // bit
	}

	[Serializable]
	[Table(Schema="lst", Name="SPSpecialServiceType")]
	public partial class SPSpecialServiceType : BaseEntity, ILocalizedEntity
	{
		[Column, NotNull    ] public string Code      { get; set; } // nvarchar(255)
		[Column, NotNull    ] public string Name      { get; set; } // nvarchar(255)
		[Column,    Nullable] public string LocalName { get; set; } // nvarchar(255)
		[Column,    Nullable] public string Note      { get; set; } // nvarchar(max)
		[Column, NotNull    ] public bool   Active    { get; set; } // bit
	}

	[Serializable]
	[Table(Schema="lst", Name="StateProvince")]
	public partial class StateProvince : BaseEntity, ILocalizedEntity
	{
		[Column, NotNull    ] public string Code      { get; set; } // nvarchar(50)
		[Column, NotNull    ] public string Name      { get; set; } // nvarchar(255)
		[Column,    Nullable] public string ShortName { get; set; } // nvarchar(100)
		[Column, NotNull    ] public string CountryId { get; set; } // varchar(50)
		[Column,    Nullable] public string Note      { get; set; } // nvarchar(500)
		[Column, NotNull    ] public bool   Active    { get; set; } // bit

		#region Associations

		/// <summary>
		/// FK_BankBranches_PK_StateProvince_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="StateProvinceId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<BankBranch> BankBranches { get; set; }

		/// <summary>
		/// FK_StateProvinces_PK_Country
		/// </summary>
		[Association(ThisKey="CountryId", OtherKey="Id", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK_StateProvinces_PK_Country", BackReferenceName="StateProvinces")]
		public Country Country { get; set; }

		/// <summary>
		/// FK_Districts_PK_StateProvince_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="StateProvinceId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<District> Districts { get; set; }

		/// <summary>
		/// FK_Ports_PK_StateProvince_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="StateProvinceId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<Port> Ports { get; set; }

		/// <summary>
		/// FK_SPAddresses_PK_StateProvince_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="StateProvinceId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<SPAddress> SPAddresses { get; set; }

		/// <summary>
		/// FK_Wards_PK_StateProvince_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="StateProvinceId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<Ward> Wards { get; set; }

		#endregion
	}

	[Serializable]
	[Table(Schema="lst", Name="Trucker")]
	public partial class Trucker : BaseEntity, ILocalizedEntity
	{
		[Column, NotNull    ] public string Code      { get; set; } // nvarchar(50)
		[Column, NotNull    ] public string Name      { get; set; } // nvarchar(255)
		[Column,    Nullable] public string LocalName { get; set; } // nvarchar(255)
		[Column,    Nullable] public string Website   { get; set; } // nvarchar(500)
		[Column,    Nullable] public string Note      { get; set; } // nvarchar(max)
		[Column, NotNull    ] public bool   Active    { get; set; } // bit
	}

	[Serializable]
	[Table(Schema="lst", Name="User")]
	public partial class User : BaseEntity
	{
		[PrimaryKey(1), NotNull    ] public string AccountId { get; set; } // varchar(50)
		[PrimaryKey(2), NotNull    ] public string PartnerId { get; set; } // varchar(50)
		[Column,           Nullable] public int?   Status    { get; set; } // int
	}

	[Serializable]
	[Table(Schema="lst", Name="VatPercentage")]
	public partial class VatPercentage : BaseEntity
	{
		[Column, NotNull] public string   VatTypeId  { get; set; } // varchar(50)
		[Column, NotNull] public DateTime FromDate   { get; set; } // datetime
		[Column, NotNull] public decimal  Percentage { get; set; } // decimal(18, 4)

		#region Associations

		/// <summary>
		/// FK_VatPercentages_PK_VatType
		/// </summary>
		[Association(ThisKey="VatTypeId", OtherKey="Id", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK_VatPercentages_PK_VatType", BackReferenceName="VatPercentages")]
		public VatType VatType { get; set; }

		#endregion
	}

	[Serializable]
	[Table(Schema="lst", Name="VatType")]
	public partial class VatType : BaseEntity, ILocalizedEntity
	{
		[Column, NotNull    ] public string Code        { get; set; } // nvarchar(255)
		[Column, NotNull    ] public string Name        { get; set; } // nvarchar(255)
		[Column,    Nullable] public string LocalName   { get; set; } // nvarchar(255)
		[Column,    Nullable] public string Description { get; set; } // nvarchar(max)
		[Column, NotNull    ] public bool   Active      { get; set; } // bit

		#region Associations

		/// <summary>
		/// FK_ChargesTypes_PK_VatType_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="VatTypeId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<ChargesType> ChargesTypes { get; set; }

		/// <summary>
		/// FK_SPBillings_PK_VatType_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="VatTypeId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<SPBilling> SPBillings { get; set; }

		/// <summary>
		/// FK_VatPercentages_PK_VatType_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="VatTypeId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<VatPercentage> VatPercentages { get; set; }

		#endregion
	}

	[Serializable]
	[Table(Schema="lst", Name="Vendor")]
	public partial class Vendor : BaseEntity, ILocalizedEntity
	{
		[Column, NotNull    ] public string Code      { get; set; } // nvarchar(50)
		[Column, NotNull    ] public string Name      { get; set; } // nvarchar(255)
		[Column,    Nullable] public string LocalName { get; set; } // nvarchar(255)
		[Column,    Nullable] public string Website   { get; set; } // nvarchar(500)
		[Column,    Nullable] public string Note      { get; set; } // nvarchar(500)
		[Column, NotNull    ] public bool   Active    { get; set; } // bit
	}

	[Serializable]
	[Table(Schema="lst", Name="Vessel")]
	public partial class Vessel : BaseEntity, ILocalizedEntity
	{
		[Column, NotNull    ] public string Name         { get; set; } // nvarchar(255)
		[Column,    Nullable] public string IMOCode      { get; set; } // nvarchar(50)
		[Column,    Nullable] public string LocalName    { get; set; } // nvarchar(255)
		[Column,    Nullable] public string CountryId    { get; set; } // varchar(50)
		[Column,    Nullable] public string Note         { get; set; } // nvarchar(500)
		[Column, NotNull    ] public bool   Active       { get; set; } // bit
		[Column, NotNull    ] public int    DisplayOrder { get; set; } // int

		#region Associations

		/// <summary>
		/// FK_Vessels_PK_Country
		/// </summary>
		[Association(ThisKey="CountryId", OtherKey="Id", CanBeNull=true, Relationship=Relationship.ManyToOne, KeyName="FK_Vessels_PK_Country", BackReferenceName="Vessels")]
		public Country Country { get; set; }

		#endregion
	}

	[Serializable]
	[Table(Schema="lst", Name="Ward")]
	public partial class Ward : BaseEntity, ILocalizedEntity
	{
		[Column, NotNull    ] public string Code            { get; set; } // nvarchar(50)
		[Column, NotNull    ] public string Name            { get; set; } // nvarchar(255)
		[Column,    Nullable] public string ShortName       { get; set; } // nvarchar(100)
		[Column, NotNull    ] public string CountryId       { get; set; } // varchar(50)
		[Column, NotNull    ] public string StateProvinceId { get; set; } // varchar(50)
		[Column, NotNull    ] public string DistrictId      { get; set; } // varchar(50)
		[Column,    Nullable] public string Note            { get; set; } // nvarchar(500)
		[Column, NotNull    ] public bool   Active          { get; set; } // bit

		#region Associations

		/// <summary>
		/// FK_Wards_PK_Country
		/// </summary>
		[Association(ThisKey="CountryId", OtherKey="Id", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK_Wards_PK_Country", BackReferenceName="Wards")]
		public Country Country { get; set; }

		/// <summary>
		/// FK_Wards_PK_District
		/// </summary>
		[Association(ThisKey="DistrictId", OtherKey="Id", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK_Wards_PK_District", BackReferenceName="Wards")]
		public District District { get; set; }

		/// <summary>
		/// FK_SPAddresses_PK_Ward_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="WardId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<SPAddress> SPAddresses { get; set; }

		/// <summary>
		/// FK_Wards_PK_StateProvince
		/// </summary>
		[Association(ThisKey="StateProvinceId", OtherKey="Id", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK_Wards_PK_StateProvince", BackReferenceName="Wards")]
		public StateProvince StateProvince { get; set; }

		#endregion
	}

	[Serializable]
	[Table(Schema="wh", Name="Warehouse")]
	public partial class Warehouse : BaseEntity, ILocalizedEntity
	{
		[Column, NotNull    ] public string Code                 { get; set; } // nvarchar(50)
		[Column, NotNull    ] public string Name                 { get; set; } // nvarchar(255)
		[Column,    Nullable] public string LocalName            { get; set; } // nvarchar(255)
		[Column, NotNull    ] public int    Type                 { get; set; } // int
		[Column,    Nullable] public string TerminalCode         { get; set; } // nvarchar(50)
		[Column, NotNull    ] public bool   IsInternal           { get; set; } // bit
		[Column, NotNull    ] public string CurrencyId           { get; set; } // varchar(50)
		[Column, NotNull    ] public string CurrencyCode         { get; set; } // nvarchar(50)
		[Column, NotNull    ] public string MeasureDimensionId   { get; set; } // varchar(50)
		[Column, NotNull    ] public string MeasureDimensionCode { get; set; } // nvarchar(50)
		[Column, NotNull    ] public string MeasureWeightId      { get; set; } // varchar(50)
		[Column, NotNull    ] public string MeasureWeightCode    { get; set; } // nvarchar(50)
		[Column,    Nullable] public string Note                 { get; set; } // nvarchar(max)
		[Column, NotNull    ] public bool   Active               { get; set; } // bit

		#region Associations

		/// <summary>
		/// FK_PostOffices_PK_Warehouse_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="WarehouseId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<PostOffice> PostOffices { get; set; }

		#endregion
	}

	public static partial class MasterDataConnectionStoredProcedures
	{
		#region sp_alterdiagram

		public static int sp_alterdiagram(this MasterDataConnection dataConnection, string @diagramname, int? @owner_id, int? @version, byte[] @definition)
		{
			return dataConnection.ExecuteProc("[dbo].[sp_alterdiagram]",
				new DataParameter("@diagramname", @diagramname, DataType.NVarChar),
				new DataParameter("@owner_id",    @owner_id,    DataType.Int32),
				new DataParameter("@version",     @version,     DataType.Int32),
				new DataParameter("@definition",  @definition,  DataType.VarBinary));
		}

		#endregion

		#region sp_creatediagram

		public static int sp_creatediagram(this MasterDataConnection dataConnection, string @diagramname, int? @owner_id, int? @version, byte[] @definition)
		{
			return dataConnection.ExecuteProc("[dbo].[sp_creatediagram]",
				new DataParameter("@diagramname", @diagramname, DataType.NVarChar),
				new DataParameter("@owner_id",    @owner_id,    DataType.Int32),
				new DataParameter("@version",     @version,     DataType.Int32),
				new DataParameter("@definition",  @definition,  DataType.VarBinary));
		}

		#endregion

		#region sp_dropdiagram

		public static int sp_dropdiagram(this MasterDataConnection dataConnection, string @diagramname, int? @owner_id)
		{
			return dataConnection.ExecuteProc("[dbo].[sp_dropdiagram]",
				new DataParameter("@diagramname", @diagramname, DataType.NVarChar),
				new DataParameter("@owner_id",    @owner_id,    DataType.Int32));
		}

		#endregion

		#region sp_helpdiagramdefinition

		public static IEnumerable<sp_helpdiagramdefinitionResult> sp_helpdiagramdefinition(this MasterDataConnection dataConnection, string @diagramname, int? @owner_id)
		{
			return dataConnection.QueryProc<sp_helpdiagramdefinitionResult>("[dbo].[sp_helpdiagramdefinition]",
				new DataParameter("@diagramname", @diagramname, DataType.NVarChar),
				new DataParameter("@owner_id",    @owner_id,    DataType.Int32));
		}

		public partial class sp_helpdiagramdefinitionResult
		{
			public int?   version    { get; set; }
			public byte[] definition { get; set; }
		}

		#endregion

		#region sp_helpdiagrams

		public static IEnumerable<sp_helpdiagramsResult> sp_helpdiagrams(this MasterDataConnection dataConnection, string @diagramname, int? @owner_id)
		{
			return dataConnection.QueryProc<sp_helpdiagramsResult>("[dbo].[sp_helpdiagrams]",
				new DataParameter("@diagramname", @diagramname, DataType.NVarChar),
				new DataParameter("@owner_id",    @owner_id,    DataType.Int32));
		}

		public partial class sp_helpdiagramsResult
		{
			public string Database { get; set; }
			public string Name     { get; set; }
			public int    ID       { get; set; }
			public string Owner    { get; set; }
			public int    OwnerID  { get; set; }
		}

		#endregion

		#region sp_renamediagram

		public static int sp_renamediagram(this MasterDataConnection dataConnection, string @diagramname, int? @owner_id, string @new_diagramname)
		{
			return dataConnection.ExecuteProc("[dbo].[sp_renamediagram]",
				new DataParameter("@diagramname",     @diagramname,     DataType.NVarChar),
				new DataParameter("@owner_id",        @owner_id,        DataType.Int32),
				new DataParameter("@new_diagramname", @new_diagramname, DataType.NVarChar));
		}

		#endregion
	}

	public static partial class SqlFunctions
	{
		#region fn_diagramobjects

		[Sql.Function(Name="dbo.fn_diagramobjects", ServerSideOnly=true)]
		public static int? fn_diagramobjects()
		{
			throw new InvalidOperationException();
		}

		#endregion
	}

	public static partial class TableExtensions
	{
		public static Airline Find(this ITable<Airline> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static Bank Find(this ITable<Bank> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static BankAccount Find(this ITable<BankAccount> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static BankBranch Find(this ITable<BankBranch> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static CargoAddService Find(this ITable<CargoAddService> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static CargoSPService Find(this ITable<CargoSPService> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ChargesGroup Find(this ITable<ChargesGroup> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ChargesType Find(this ITable<ChargesType> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static Commodity Find(this ITable<Commodity> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static CommodityGroup Find(this ITable<CommodityGroup> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static Consignee Find(this ITable<Consignee> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static Country Find(this ITable<Country> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static Currency Find(this ITable<Currency> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static CustomAgent Find(this ITable<CustomAgent> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static DeliveryTime Find(this ITable<DeliveryTime> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static District Find(this ITable<District> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static EventType Find(this ITable<EventType> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ForwardingAgent Find(this ITable<ForwardingAgent> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static GenericAttribute Find(this ITable<GenericAttribute> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static GlobalZone Find(this ITable<GlobalZone> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static Incoterm Find(this ITable<Incoterm> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static Language Find(this ITable<Language> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static LocaleStringResource Find(this ITable<LocaleStringResource> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static LocalizedProperty Find(this ITable<LocalizedProperty> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static MeasureDimension Find(this ITable<MeasureDimension> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static MeasureWeight Find(this ITable<MeasureWeight> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static PackageType Find(this ITable<PackageType> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static PaymentMethod Find(this ITable<PaymentMethod> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static PaymentTerm Find(this ITable<PaymentTerm> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static Port Find(this ITable<Port> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static PostOffice Find(this ITable<PostOffice> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static QuantityUnit Find(this ITable<QuantityUnit> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static Setting Find(this ITable<Setting> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static Shipper Find(this ITable<Shipper> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ShippingAgent Find(this ITable<ShippingAgent> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ShippingLine Find(this ITable<ShippingLine> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static SPAddress Find(this ITable<SPAddress> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static SPBilling Find(this ITable<SPBilling> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static SPCustomer Find(this ITable<SPCustomer> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static SPMeasurement Find(this ITable<SPMeasurement> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static SPMoveType Find(this ITable<SPMoveType> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static SPProductType Find(this ITable<SPProductType> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static SPSpecialServiceType Find(this ITable<SPSpecialServiceType> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static StateProvince Find(this ITable<StateProvince> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static Trucker Find(this ITable<Trucker> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static User Find(this ITable<User> table, string AccountId, string PartnerId)
		{
			return table.FirstOrDefault(t =>
				t.AccountId == AccountId &&
				t.PartnerId == PartnerId);
		}

		public static VatPercentage Find(this ITable<VatPercentage> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static VatType Find(this ITable<VatType> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static Vendor Find(this ITable<Vendor> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static Vessel Find(this ITable<Vessel> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static Ward Find(this ITable<Ward> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static Warehouse Find(this ITable<Warehouse> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}
	}
}

#pragma warning restore 1591
