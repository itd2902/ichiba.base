//---------------------------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated by T4Model template for T4 (https://github.com/linq2db/linq2db).
//    Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------------------------------

#pragma warning disable 1591

using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;

using IChiba.Core.Domain.Localization;

using LinqToDB;
using LinqToDB.Common;
using LinqToDB.Data;
using LinqToDB.Mapping;

namespace IChiba.Core.Domain.OP
{
	/// <summary>
	/// Database       : IC_EXPRESS_OP
	/// Data Source    : db.ichibaexpress.com,1436
	/// Server Version : 15.00.2000
	/// </summary>
	public partial class OPDataConnection : LinqToDB.Data.DataConnection
	{
		public ITable<Dispatch>                Dispatches               { get { return this.GetTable<Dispatch>(); } }
		public ITable<DispatchBag>             DispatchBags             { get { return this.GetTable<DispatchBag>(); } }
		public ITable<Event>                   Events                   { get { return this.GetTable<Event>(); } }
		public ITable<Payable>                 Payables                 { get { return this.GetTable<Payable>(); } }
		public ITable<Payment>                 Payments                 { get { return this.GetTable<Payment>(); } }
		public ITable<Receivable>              Receivables              { get { return this.GetTable<Receivable>(); } }
		public ITable<Shipment>                Shipments                { get { return this.GetTable<Shipment>(); } }
		public ITable<ShipmentCargoAddService> ShipmentCargoAddServices { get { return this.GetTable<ShipmentCargoAddService>(); } }
		public ITable<ShipmentItem>            ShipmentItems            { get { return this.GetTable<ShipmentItem>(); } }
		public ITable<SPOrder>                 SPOrders                 { get { return this.GetTable<SPOrder>(); } }
		public ITable<SPOrderCargoAddService>  SPOrderCargoAddServices  { get { return this.GetTable<SPOrderCargoAddService>(); } }
		public ITable<SPOrderDetail>           SPOrderDetails           { get { return this.GetTable<SPOrderDetail>(); } }

		public OPDataConnection()
		{
			InitDataContext();
			InitMappingSchema();
		}

		public OPDataConnection(string configuration)
			: base(configuration)
		{
			InitDataContext();
			InitMappingSchema();
		}

		partial void InitDataContext  ();
		partial void InitMappingSchema();
	}

	[Serializable]
	[Table(Schema="op", Name="Dispatch")]
	public partial class Dispatch : BaseEntity
	{
		[Column,    Nullable] public string    Barcode         { get; set; } // varchar(100)
		[Column,    Nullable] public int?      TransportType   { get; set; } // int
		[Column,    Nullable] public string    Flight          { get; set; } // nvarchar(255)
		[Column,    Nullable] public string    FlightNo        { get; set; } // nvarchar(255)
		[Column,    Nullable] public DateTime? FlightDateUtc   { get; set; } // datetime
		[Column,    Nullable] public string    FromPortId      { get; set; } // varchar(50)
		[Column,    Nullable] public string    ToPortId        { get; set; } // varchar(50)
		[Column,    Nullable] public string    MAWB            { get; set; } // nvarchar(255)
		[Column,    Nullable] public string    HAWB            { get; set; } // nvarchar(255)
		[Column,    Nullable] public int?      TotalBag        { get; set; } // int
		[Column,    Nullable] public int?      TotalShipment   { get; set; } // int
		[Column,    Nullable] public decimal?  TotalWeight     { get; set; } // decimal(18, 4)
		[Column,    Nullable] public decimal?  GrossWeight     { get; set; } // decimal(18, 4)
		[Column,    Nullable] public int?      Status          { get; set; } // int
		[Column,    Nullable] public string    Note            { get; set; } // nvarchar(4000)
		[Column,    Nullable] public string    CreatedById     { get; set; } // varchar(50)
		[Column,    Nullable] public DateTime? CreatedDateUtc  { get; set; } // datetime
		[Column,    Nullable] public string    ModifiedById    { get; set; } // varchar(50)
		[Column,    Nullable] public DateTime? ModifiedDateUtc { get; set; } // datetime
		[Column,    Nullable] public bool?     IsDeleted       { get; set; } // bit
		[Column,    Nullable] public string    DeletedById     { get; set; } // varchar(50)
		[Column,    Nullable] public DateTime? DeletedDateUtc  { get; set; } // datetime

		#region Associations

		/// <summary>
		/// FK_DispatchBags_PK_Dispatch_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="DispatchId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<DispatchBag> DispatchBags { get; set; }

		#endregion
	}

	[Serializable]
	[Table(Schema="op", Name="DispatchBag")]
	public partial class DispatchBag : BaseEntity
	{
		[Column,    Nullable] public string    DispatchId       { get; set; } // varchar(50)
		[Column,    Nullable] public string    Barcode          { get; set; } // varchar(100)
		[Column,    Nullable] public int?      BagType          { get; set; } // int
		[Column,    Nullable] public int?      BagOrder         { get; set; } // int
		[Column,    Nullable] public int?      TotalShipment    { get; set; } // int
		[Column,    Nullable] public decimal?  Length           { get; set; } // decimal(18, 4)
		[Column,    Nullable] public decimal?  Weight           { get; set; } // decimal(18, 4)
		[Column,    Nullable] public decimal?  Height           { get; set; } // decimal(18, 4)
		[Column,    Nullable] public decimal?  Volume           { get; set; } // decimal(18, 4)
		[Column,    Nullable] public decimal?  VolumetricWeight { get; set; } // decimal(18, 4)
		[Column,    Nullable] public decimal?  GrossWeight      { get; set; } // decimal(18, 4)
		[Column, NotNull    ] public bool      IsLastBag        { get; set; } // bit
		[Column,    Nullable] public int?      Status           { get; set; } // int
		[Column,    Nullable] public string    Note             { get; set; } // nvarchar(4000)
		[Column,    Nullable] public string    CreatedById      { get; set; } // varchar(50)
		[Column,    Nullable] public DateTime? CreatedDateUtc   { get; set; } // datetime
		[Column,    Nullable] public string    ModifiedById     { get; set; } // varchar(50)
		[Column,    Nullable] public DateTime? ModifiedDateUtc  { get; set; } // datetime
		[Column,    Nullable] public bool?     IsDeleted        { get; set; } // bit
		[Column,    Nullable] public string    DeletedById      { get; set; } // varchar(50)
		[Column,    Nullable] public DateTime? DeletedDateUtc   { get; set; } // datetime

		#region Associations

		/// <summary>
		/// FK_DispatchBags_PK_Dispatch
		/// </summary>
		[Association(ThisKey="DispatchId", OtherKey="Id", CanBeNull=true, Relationship=Relationship.ManyToOne, KeyName="FK_DispatchBags_PK_Dispatch", BackReferenceName="DispatchBags")]
		public Dispatch Dispatch { get; set; }

		/// <summary>
		/// FK_Shipments_PK_DispatchBag_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="DispatchBagId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<Shipment> Shipments { get; set; }

		#endregion
	}

	[Serializable]
	[Table(Schema="op", Name="Event")]
	public partial class Event : BaseEntity
	{
		[Column, NotNull    ] public string    ShipmentId      { get; set; } // varchar(50)
		[Column, NotNull    ] public string    EventTypeId     { get; set; } // varchar(50)
		[Column, NotNull    ] public string    EventType       { get; set; } // nvarchar(255)
		[Column, NotNull    ] public DateTime  EventDateUtc    { get; set; } // datetime
		[Column,    Nullable] public string    Note            { get; set; } // nvarchar(4000)
		[Column,    Nullable] public string    CreatedById     { get; set; } // varchar(50)
		[Column,    Nullable] public DateTime? CreatedDateUtc  { get; set; } // datetime
		[Column,    Nullable] public string    ModifiedById    { get; set; } // varchar(50)
		[Column,    Nullable] public DateTime? ModifiedDateUtc { get; set; } // datetime
		[Column,    Nullable] public bool?     IsDeleted       { get; set; } // bit
		[Column,    Nullable] public string    DeletedById     { get; set; } // varchar(50)
		[Column,    Nullable] public DateTime? DeletedDateUtc  { get; set; } // datetime

		#region Associations

		/// <summary>
		/// FK_Events_PK_Shipment
		/// </summary>
		[Association(ThisKey="ShipmentId", OtherKey="Id", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK_Events_PK_Shipment", BackReferenceName="Events")]
		public Shipment Shipment { get; set; }

		#endregion
	}

	[Serializable]
	[Table(Schema="op", Name="Payable")]
	public partial class Payable : BaseEntity
	{
		[Column, NotNull    ] public string    ShipmentId      { get; set; } // varchar(50)
		[Column, NotNull    ] public string    ChargeTypeId    { get; set; } // varchar(50)
		[Column, NotNull    ] public string    ChargeTypeCode  { get; set; } // varchar(100)
		[Column, NotNull    ] public string    ChargeTypeName  { get; set; } // nvarchar(255)
		[Column,    Nullable] public decimal?  Quantity        { get; set; } // decimal(18, 4)
		[Column,    Nullable] public string    QuantityUnit    { get; set; } // nvarchar(255)
		[Column,    Nullable] public decimal?  Price           { get; set; } // decimal(18, 4)
		[Column,    Nullable] public string    CurrencyId      { get; set; } // varchar(50)
		[Column,    Nullable] public decimal?  Rate            { get; set; } // decimal(18, 4)
		[Column,    Nullable] public decimal?  Amount          { get; set; } // decimal(18, 4)
		[Column,    Nullable] public string    Note            { get; set; } // nvarchar(4000)
		[Column,    Nullable] public string    CreatedById     { get; set; } // varchar(50)
		[Column,    Nullable] public DateTime? CreatedDateUtc  { get; set; } // datetime
		[Column,    Nullable] public string    ModifiedById    { get; set; } // varchar(50)
		[Column,    Nullable] public DateTime? ModifiedDateUtc { get; set; } // datetime
		[Column,    Nullable] public bool?     IsDeleted       { get; set; } // bit
		[Column,    Nullable] public string    DeletedById     { get; set; } // varchar(50)
		[Column,    Nullable] public DateTime? DeletedDateUtc  { get; set; } // datetime

		#region Associations

		/// <summary>
		/// FK_Payables_PK_Shipment
		/// </summary>
		[Association(ThisKey="ShipmentId", OtherKey="Id", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK_Payables_PK_Shipment", BackReferenceName="Payables")]
		public Shipment Shipment { get; set; }

		#endregion
	}

	[Serializable]
	[Table(Schema="op", Name="Payment")]
	public partial class Payment : BaseEntity
	{
		[Column, NotNull    ] public string    ShipmentId      { get; set; } // varchar(50)
		[Column,    Nullable] public string    PaymentMethodId { get; set; } // varchar(50)
		[Column,    Nullable] public decimal?  Amount          { get; set; } // decimal(18, 4)
		[Column,    Nullable] public int?      Status          { get; set; } // int
		[Column,    Nullable] public string    Note            { get; set; } // nvarchar(4000)
		[Column,    Nullable] public string    CreatedById     { get; set; } // varchar(50)
		[Column,    Nullable] public DateTime? CreatedDateUtc  { get; set; } // datetime
		[Column,    Nullable] public string    ModifiedById    { get; set; } // varchar(50)
		[Column,    Nullable] public DateTime? ModifiedDateUtc { get; set; } // datetime
		[Column,    Nullable] public bool?     IsDeleted       { get; set; } // bit
		[Column,    Nullable] public string    DeletedById     { get; set; } // varchar(50)
		[Column,    Nullable] public DateTime? DeletedDateUtc  { get; set; } // datetime

		#region Associations

		/// <summary>
		/// FK_Payments_PK_Shipment
		/// </summary>
		[Association(ThisKey="ShipmentId", OtherKey="Id", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK_Payments_PK_Shipment", BackReferenceName="Payments")]
		public Shipment Shipment { get; set; }

		#endregion
	}

	[Serializable]
	[Table(Schema="op", Name="Receivable")]
	public partial class Receivable : BaseEntity
	{
		[Column, NotNull    ] public string    ShipmentId      { get; set; } // varchar(50)
		[Column, NotNull    ] public string    ChargeTypeId    { get; set; } // varchar(50)
		[Column, NotNull    ] public string    ChargeTypeCode  { get; set; } // varchar(100)
		[Column, NotNull    ] public string    ChargeTypeName  { get; set; } // nvarchar(255)
		[Column,    Nullable] public decimal?  Quantity        { get; set; } // decimal(18, 4)
		[Column,    Nullable] public string    QuantityUnit    { get; set; } // nvarchar(255)
		[Column,    Nullable] public decimal?  Price           { get; set; } // decimal(18, 4)
		[Column,    Nullable] public string    CurrencyId      { get; set; } // varchar(50)
		[Column,    Nullable] public decimal?  Rate            { get; set; } // decimal(18, 4)
		[Column,    Nullable] public decimal?  Amount          { get; set; } // decimal(18, 4)
		[Column,    Nullable] public string    Note            { get; set; } // nvarchar(4000)
		[Column,    Nullable] public string    CreatedById     { get; set; } // varchar(50)
		[Column,    Nullable] public DateTime? CreatedDateUtc  { get; set; } // datetime
		[Column,    Nullable] public string    ModifiedById    { get; set; } // varchar(50)
		[Column,    Nullable] public DateTime? ModifiedDateUtc { get; set; } // datetime
		[Column,    Nullable] public bool?     IsDeleted       { get; set; } // bit
		[Column,    Nullable] public string    DeletedById     { get; set; } // varchar(50)
		[Column,    Nullable] public DateTime? DeletedDateUtc  { get; set; } // datetime

		#region Associations

		/// <summary>
		/// FK_Receivables_PK_Shipment
		/// </summary>
		[Association(ThisKey="ShipmentId", OtherKey="Id", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK_Receivables_PK_Shipment", BackReferenceName="Receivables")]
		public Shipment Shipment { get; set; }

		#endregion
	}

	[Serializable]
	[Table(Schema="op", Name="Shipment")]
	public partial class Shipment : BaseEntity
	{
		[Column, NotNull    ] public string    TrackingNumber           { get; set; } // varchar(50)
		[Column,    Nullable] public string    OrderNumber              { get; set; } // varchar(100)
		[Column, NotNull    ] public int       ShipmentType             { get; set; } // int
		[Column,    Nullable] public int?      TransportType            { get; set; } // int
		[Column,    Nullable] public int?      ImportMethod             { get; set; } // int
		[Column,    Nullable] public string    PaymentMethodId          { get; set; } // varchar(50)
		[Column,    Nullable] public string    DispatchBagId            { get; set; } // varchar(50)
		[Column,    Nullable] public int?      Pieces                   { get; set; } // int
		[Column, NotNull    ] public string    CustomerId               { get; set; } // varchar(50)
		[Column,    Nullable] public string    CustomerCode             { get; set; } // nvarchar(50)
		[Column,    Nullable] public string    CustomerName             { get; set; } // nvarchar(255)
		[Column,    Nullable] public string    CustomerTel              { get; set; } // nvarchar(50)
		[Column,    Nullable] public string    CustomerMobi             { get; set; } // nvarchar(50)
		[Column,    Nullable] public string    CustomerAddress          { get; set; } // nvarchar(4000)
		[Column,    Nullable] public string    SenderName               { get; set; } // nvarchar(255)
		[Column,    Nullable] public string    SenderTel                { get; set; } // nvarchar(50)
		[Column,    Nullable] public string    SenderEmail              { get; set; } // nvarchar(255)
		[Column,    Nullable] public string    SenderZipCode            { get; set; } // nvarchar(255)
		[Column,    Nullable] public string    SenderAddress            { get; set; } // nvarchar(4000)
		[Column,    Nullable] public string    SenderCountryId          { get; set; } // varchar(50)
		[Column,    Nullable] public string    SenderStateProvinceId    { get; set; } // varchar(50)
		[Column,    Nullable] public string    SenderDistrictId         { get; set; } // varchar(50)
		[Column,    Nullable] public string    SenderAgentName          { get; set; } // nvarchar(255)
		[Column,    Nullable] public string    SenderAgentTel           { get; set; } // nvarchar(255)
		[Column,    Nullable] public string    SenderAgentAddress       { get; set; } // nvarchar(4000)
		[Column,    Nullable] public string    ConsigneeName            { get; set; } // nvarchar(255)
		[Column,    Nullable] public string    ConsigneeTel             { get; set; } // nvarchar(50)
		[Column,    Nullable] public string    ConsigneeEmail           { get; set; } // nvarchar(255)
		[Column,    Nullable] public string    ConsigneeZipCode         { get; set; } // nvarchar(255)
		[Column,    Nullable] public string    ConsigneeAddress         { get; set; } // nvarchar(4000)
		[Column,    Nullable] public string    ConsigneeCountryId       { get; set; } // varchar(50)
		[Column,    Nullable] public string    ConsigneeStateProvinceId { get; set; } // varchar(50)
		[Column,    Nullable] public string    ConsigneeDistrictId      { get; set; } // varchar(50)
		[Column,    Nullable] public string    ConsigneeAgentName       { get; set; } // nvarchar(255)
		[Column,    Nullable] public string    ConsigneeAgentTel        { get; set; } // nvarchar(255)
		[Column,    Nullable] public string    ConsigneeAgentAddress    { get; set; } // nvarchar(4000)
		[Column,    Nullable] public string    GoodsDescription         { get; set; } // nvarchar(4000)
		[Column,    Nullable] public decimal?  DeclaredValueCarriage    { get; set; } // decimal(18, 4)
		[Column,    Nullable] public decimal?  DeclaredValueCustoms     { get; set; } // decimal(18, 4)
		[Column,    Nullable] public decimal?  InsuranceValue           { get; set; } // decimal(18, 4)
		[Column,    Nullable] public decimal?  TotalShipmentValue       { get; set; } // decimal(18, 4)
		[Column,    Nullable] public decimal?  FreightAmount            { get; set; } // decimal(18, 4)
		[Column,    Nullable] public decimal?  Surcharge                { get; set; } // decimal(18, 4)
		[Column,    Nullable] public decimal?  ChargeableWeight         { get; set; } // decimal(18, 4)
		[Column,    Nullable] public decimal?  VolumetricWeight         { get; set; } // decimal(18, 4)
		[Column,    Nullable] public decimal?  GrossWeight              { get; set; } // decimal(18, 4)
		[Column, NotNull    ] public bool      IsFragile                { get; set; } // bit
		[Column, NotNull    ] public bool      IsDangerous              { get; set; } // bit
		[Column,    Nullable] public string    InvoiceNumber            { get; set; } // varchar(100)
		[Column,    Nullable] public string    Note                     { get; set; } // nvarchar(4000)
		[Column,    Nullable] public string    CreatedById              { get; set; } // varchar(50)
		[Column,    Nullable] public DateTime? CreatedDateUtc           { get; set; } // datetime
		[Column,    Nullable] public string    ModifiedById             { get; set; } // varchar(50)
		[Column,    Nullable] public DateTime? ModifiedDateUtc          { get; set; } // datetime
		[Column,    Nullable] public bool?     IsDeleted                { get; set; } // bit
		[Column,    Nullable] public string    DeletedById              { get; set; } // varchar(50)
		[Column,    Nullable] public DateTime? DeletedDateUtc           { get; set; } // datetime

		#region Associations

		/// <summary>
		/// FK_Shipments_PK_DispatchBag
		/// </summary>
		[Association(ThisKey="DispatchBagId", OtherKey="Id", CanBeNull=true, Relationship=Relationship.ManyToOne, KeyName="FK_Shipments_PK_DispatchBag", BackReferenceName="Shipments")]
		public DispatchBag DispatchBag { get; set; }

		/// <summary>
		/// FK_Events_PK_Shipment_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="ShipmentId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<Event> Events { get; set; }

		/// <summary>
		/// FK_Payables_PK_Shipment_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="ShipmentId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<Payable> Payables { get; set; }

		/// <summary>
		/// FK_Payments_PK_Shipment_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="ShipmentId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<Payment> Payments { get; set; }

		/// <summary>
		/// FK_Receivables_PK_Shipment_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="ShipmentId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<Receivable> Receivables { get; set; }

		/// <summary>
		/// FK_ShipmentCargoAddServices_PK_Shipment_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="ShipmentId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<ShipmentCargoAddService> ShipmentCargoAddServices { get; set; }

		/// <summary>
		/// FK_ShipmentItems_PK_Shipment_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="ShipmentId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<ShipmentItem> ShipmentItems { get; set; }

		#endregion
	}

	[Serializable]
	[Table(Schema="op", Name="ShipmentCargoAddService")]
	public partial class ShipmentCargoAddService : BaseEntity
	{
		[Column, NotNull    ] public string    ShipmentId           { get; set; } // varchar(50)
		[Column, NotNull    ] public string    CargoAddServiceId    { get; set; } // varchar(50)
		[Column,    Nullable] public string    CargoAddServiceCode  { get; set; } // varchar(50)
		[Column,    Nullable] public decimal?  CargoAddServiceValue { get; set; } // decimal(18, 4)
		[Column,    Nullable] public string    Note                 { get; set; } // nchar(10)
		[Column, NotNull    ] public string    CreatedBy            { get; set; } // varchar(50)
		[Column, NotNull    ] public DateTime  CreatedOnUtc         { get; set; } // datetime
		[Column,    Nullable] public string    UpdatedBy            { get; set; } // varchar(50)
		[Column,    Nullable] public DateTime? UpdatedOnUtc         { get; set; } // datetime
		[Column, NotNull    ] public bool      Deleted              { get; set; } // bit
		[Column,    Nullable] public string    DeletedBy            { get; set; } // varchar(50)
		[Column,    Nullable] public DateTime? DeletedOnUtc         { get; set; } // datetime

		#region Associations

		/// <summary>
		/// FK_ShipmentCargoAddServices_PK_Shipment
		/// </summary>
		[Association(ThisKey="ShipmentId", OtherKey="Id", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK_ShipmentCargoAddServices_PK_Shipment", BackReferenceName="ShipmentCargoAddServices")]
		public Shipment Shipment { get; set; }

		#endregion
	}

	[Serializable]
	[Table(Schema="op", Name="ShipmentItem")]
	public partial class ShipmentItem : BaseEntity
	{
		[Column, NotNull    ] public string    ShipmentId            { get; set; } // varchar(50)
		[Column,    Nullable] public string    HSCode                { get; set; } // varchar(100)
		[Column,    Nullable] public string    SKU                   { get; set; } // varchar(100)
		[Column,    Nullable] public string    ProductName           { get; set; } // nvarchar(255)
		[Column,    Nullable] public string    ProductTypeId         { get; set; } // varchar(50)
		[Column,    Nullable] public string    CertificateOfOriginal { get; set; } // nvarchar(255)
		[Column,    Nullable] public string    CertificateOfQuality  { get; set; } // nvarchar(255)
		[Column,    Nullable] public int?      PackageOrder          { get; set; } // int
		[Column,    Nullable] public string    ChemicalComposition   { get; set; } // nvarchar(4000)
		[Column,    Nullable] public decimal?  Length                { get; set; } // decimal(18, 4)
		[Column,    Nullable] public decimal?  Weight                { get; set; } // decimal(18, 4)
		[Column,    Nullable] public decimal?  Height                { get; set; } // decimal(18, 4)
		[Column,    Nullable] public decimal?  Volume                { get; set; } // decimal(18, 4)
		[Column,    Nullable] public decimal?  VolumetricWeight      { get; set; } // decimal(18, 4)
		[Column,    Nullable] public decimal?  GrossWeight           { get; set; } // decimal(18, 4)
		[Column,    Nullable] public decimal?  Quantity              { get; set; } // decimal(18, 4)
		[Column,    Nullable] public string    QuantityUnit          { get; set; } // nvarchar(255)
		[Column,    Nullable] public decimal?  Price                 { get; set; } // decimal(18, 4)
		[Column,    Nullable] public decimal?  Amount                { get; set; } // decimal(18, 4)
		[Column,    Nullable] public string    CurrencyId            { get; set; } // varchar(50)
		[Column,    Nullable] public string    Note                  { get; set; } // nvarchar(4000)
		[Column,    Nullable] public string    CreatedById           { get; set; } // varchar(50)
		[Column,    Nullable] public DateTime? CreatedDateUtc        { get; set; } // datetime
		[Column,    Nullable] public string    ModifiedById          { get; set; } // varchar(50)
		[Column,    Nullable] public DateTime? ModifiedDateUtc       { get; set; } // datetime
		[Column,    Nullable] public bool?     IsDeleted             { get; set; } // bit
		[Column,    Nullable] public string    DeletedById           { get; set; } // varchar(50)
		[Column,    Nullable] public DateTime? DeletedDateUtc        { get; set; } // datetime

		#region Associations

		/// <summary>
		/// FK_ShipmentItems_PK_Shipment
		/// </summary>
		[Association(ThisKey="ShipmentId", OtherKey="Id", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK_ShipmentItems_PK_Shipment", BackReferenceName="ShipmentItems")]
		public Shipment Shipment { get; set; }

		#endregion
	}

	[Serializable]
	[Table(Schema="op", Name="SPOrder")]
	public partial class SPOrder : BaseEntity
	{
		[Column, NotNull    ] public string    OrderNumber              { get; set; } // varchar(100)
		[Column, NotNull    ] public string    CustomerId               { get; set; } // varchar(50)
		[Column, NotNull    ] public string    CustomerCode             { get; set; } // nvarchar(50)
		[Column,    Nullable] public string    CustomerName             { get; set; } // nvarchar(255)
		[Column,    Nullable] public string    CustomerEmail            { get; set; } // nvarchar(255)
		[Column,    Nullable] public string    CustomerCountryId        { get; set; } // varchar(50)
		[Column,    Nullable] public string    CustomerStateProvinceId  { get; set; } // varchar(50)
		[Column,    Nullable] public string    CustomerCity             { get; set; } // nvarchar(255)
		[Column,    Nullable] public string    CustomerDistrictId       { get; set; } // varchar(50)
		[Column,    Nullable] public string    CustomerWardId           { get; set; } // varchar(50)
		[Column,    Nullable] public string    CustomerAddress1         { get; set; } // nvarchar(1000)
		[Column,    Nullable] public string    CustomerAddress2         { get; set; } // nvarchar(1000)
		[Column,    Nullable] public string    CustomerZipPostalCode    { get; set; } // nvarchar(50)
		[Column,    Nullable] public string    CustomerPhoneNumber      { get; set; } // nvarchar(50)
		[Column,    Nullable] public string    ShipperId                { get; set; } // varchar(50)
		[Column,    Nullable] public string    ShipperCode              { get; set; } // nvarchar(50)
		[Column,    Nullable] public string    ShipperName              { get; set; } // nvarchar(255)
		[Column,    Nullable] public string    ShipperEmail             { get; set; } // nvarchar(255)
		[Column,    Nullable] public string    ShipperCountryId         { get; set; } // varchar(50)
		[Column,    Nullable] public string    ShipperStateProvinceId   { get; set; } // varchar(50)
		[Column,    Nullable] public string    ShipperCity              { get; set; } // nvarchar(255)
		[Column,    Nullable] public string    ShipperDistrictId        { get; set; } // varchar(50)
		[Column,    Nullable] public string    ShipperWardId            { get; set; } // varchar(50)
		[Column,    Nullable] public string    ShipperAddress1          { get; set; } // nvarchar(1000)
		[Column,    Nullable] public string    ShipperAddress2          { get; set; } // nvarchar(1000)
		[Column,    Nullable] public string    ShipperZipPostalCode     { get; set; } // nvarchar(50)
		[Column,    Nullable] public string    ShipperPhoneNumber       { get; set; } // nvarchar(50)
		[Column,    Nullable] public string    ShipperFwdAgentId        { get; set; } // varchar(50)
		[Column,    Nullable] public string    ConsigneeId              { get; set; } // varchar(50)
		[Column,    Nullable] public string    ConsigneeCode            { get; set; } // nvarchar(50)
		[Column,    Nullable] public string    ConsigneeName            { get; set; } // nvarchar(255)
		[Column,    Nullable] public string    ConsigneeEmail           { get; set; } // nvarchar(255)
		[Column,    Nullable] public string    ConsigneeCountryId       { get; set; } // varchar(50)
		[Column,    Nullable] public string    ConsigneeStateProvinceId { get; set; } // varchar(50)
		[Column,    Nullable] public string    ConsigneeCity            { get; set; } // nvarchar(255)
		[Column,    Nullable] public string    ConsigneeDistrictId      { get; set; } // varchar(50)
		[Column,    Nullable] public string    ConsigneeWardId          { get; set; } // varchar(50)
		[Column,    Nullable] public string    ConsigneeAddress1        { get; set; } // nvarchar(1000)
		[Column,    Nullable] public string    ConsigneeAddress2        { get; set; } // nvarchar(1000)
		[Column,    Nullable] public string    ConsigneeZipPostalCode   { get; set; } // nvarchar(50)
		[Column,    Nullable] public string    ConsigneePhoneNumber     { get; set; } // nvarchar(50)
		[Column,    Nullable] public string    ConsigneeFwdAgentId      { get; set; } // varchar(50)
		[Column, NotNull    ] public int       CargoPickupMethod        { get; set; } // int
		[Column, NotNull    ] public string    CargoPickupMethodText    { get; set; } // nvarchar(255)
		[Column,    Nullable] public string    PickupName               { get; set; } // nvarchar(255)
		[Column,    Nullable] public string    PickupEmail              { get; set; } // nvarchar(255)
		[Column,    Nullable] public string    PickupCountryId          { get; set; } // varchar(50)
		[Column,    Nullable] public string    PickupStateProvinceId    { get; set; } // varchar(50)
		[Column,    Nullable] public string    PickupCity               { get; set; } // nvarchar(255)
		[Column,    Nullable] public string    PickupDistrictId         { get; set; } // varchar(50)
		[Column,    Nullable] public string    PickupWardId             { get; set; } // varchar(50)
		[Column,    Nullable] public string    PickupAddress1           { get; set; } // nvarchar(1000)
		[Column,    Nullable] public string    PickupAddress2           { get; set; } // nvarchar(1000)
		[Column,    Nullable] public string    PickupZipPostalCode      { get; set; } // nvarchar(50)
		[Column,    Nullable] public string    PickupPhoneNumber        { get; set; } // nvarchar(50)
		[Column, NotNull    ] public int       CargoShippingMethod      { get; set; } // int
		[Column, NotNull    ] public string    CargoShippingMethodText  { get; set; } // nvarchar(255)
		[Column, NotNull    ] public int       CargoType                { get; set; } // int
		[Column, NotNull    ] public string    CargoTypeText            { get; set; } // nvarchar(255)
		[Column, NotNull    ] public int       Pieces                   { get; set; } // int
		[Column,    Nullable] public string    ReferenceNumber          { get; set; } // nvarchar(50)
		[Column, NotNull    ] public string    PostOfficeToSendId       { get; set; } // varchar(50)
		[Column, NotNull    ] public string    PostOfficeToSendCode     { get; set; } // nvarchar(50)
		[Column,    Nullable] public DateTime? SendDate                 { get; set; } // date
		[Column, NotNull    ] public string    MeasureWeightId          { get; set; } // varchar(50)
		[Column, NotNull    ] public string    MeasureWeightCode        { get; set; } // nvarchar(50)
		[Column, NotNull    ] public string    CurrencyId               { get; set; } // varchar(50)
		[Column, NotNull    ] public string    CurrencyCode             { get; set; } // nvarchar(50)
		[Column, NotNull    ] public string    CargoSPServiceId         { get; set; } // varchar(50)
		[Column, NotNull    ] public string    CargoSPServiceCode       { get; set; } // nvarchar(50)
		[Column,    Nullable] public string    Note                     { get; set; } // nvarchar(4000)
		[Column, NotNull    ] public int       Status                   { get; set; } // int
		[Column,    Nullable] public DateTime? ReceivedDate             { get; set; } // datetime
		[Column, NotNull    ] public string    CreatedBy                { get; set; } // varchar(50)
		[Column, NotNull    ] public string    CreatedByUserName        { get; set; } // nvarchar(255)
		[Column, NotNull    ] public DateTime  CreatedOnUtc             { get; set; } // datetime
		[Column,    Nullable] public string    UpdatedBy                { get; set; } // varchar(50)
		[Column,    Nullable] public string    UpdatedByUserName        { get; set; } // nvarchar(255)
		[Column,    Nullable] public DateTime? UpdatedOnUtc             { get; set; } // datetime
		[Column, NotNull    ] public bool      Deleted                  { get; set; } // bit
		[Column,    Nullable] public string    DeletedBy                { get; set; } // varchar(50)
		[Column,    Nullable] public string    DeletedByUserName        { get; set; } // nvarchar(255)
		[Column,    Nullable] public DateTime? DeletedOnUtc             { get; set; } // datetime

		#region Associations

		/// <summary>
		/// FK_OrderCargoAddServices_PK_Order_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="OrderId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<SPOrderCargoAddService> OrderCargoAddServices { get; set; }

		/// <summary>
		/// FK_OrderDetails_PK_Order_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="OrderId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<SPOrderDetail> OrderDetails { get; set; }

		#endregion
	}

	[Serializable]
	[Table(Schema="op", Name="SPOrderCargoAddService")]
	public partial class SPOrderCargoAddService : BaseEntity
	{
		[Column, NotNull    ] public string OrderId             { get; set; } // varchar(50)
		[Column, NotNull    ] public string CargoAddServiceId   { get; set; } // varchar(50)
		[Column,    Nullable] public string CargoAddServiceCode { get; set; } // varchar(50)

		#region Associations

		/// <summary>
		/// FK_OrderCargoAddServices_PK_Order
		/// </summary>
		[Association(ThisKey="OrderId", OtherKey="Id", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK_OrderCargoAddServices_PK_Order", BackReferenceName="OrderCargoAddServices")]
		public SPOrder Order { get; set; }

		#endregion
	}

	[Serializable]
	[Table(Schema="op", Name="SPOrderDetail")]
	public partial class SPOrderDetail : BaseEntity
	{
		[Column, NotNull    ] public string    OrderId                   { get; set; } // varchar(50)
		[Column, NotNull    ] public string    CommodityId               { get; set; } // varchar(50)
		[Column, NotNull    ] public string    CommodityCode             { get; set; } // nvarchar(50)
		[Column, NotNull    ] public int       DeclaredCargoClass        { get; set; } // int
		[Column, NotNull    ] public string    DeclaredCargoClassText    { get; set; } // nvarchar(255)
		[Column,    Nullable] public string    HSCode                    { get; set; } // varchar(100)
		[Column,    Nullable] public string    SKU                       { get; set; } // varchar(100)
		[Column, NotNull    ] public string    CountryOfOriginId         { get; set; } // varchar(50)
		[Column, NotNull    ] public string    CountryOfOriginCode       { get; set; } // nvarchar(50)
		[Column, NotNull    ] public decimal   TotalGrossWeight          { get; set; } // decimal(18, 4)
		[Column, NotNull    ] public string    MeasureWeightId           { get; set; } // varchar(50)
		[Column, NotNull    ] public string    MeasureWeightCode         { get; set; } // nvarchar(50)
		[Column, NotNull    ] public decimal   Quantity                  { get; set; } // decimal(18, 4)
		[Column, NotNull    ] public decimal   Price                     { get; set; } // decimal(18, 4)
		[Column, NotNull    ] public decimal   TotalAmount               { get; set; } // decimal(18, 4)
		[Column, NotNull    ] public decimal   DeclaredCustomsValue      { get; set; } // decimal(18, 4)
		[Column, NotNull    ] public decimal   TotalDeclaredCustomsValue { get; set; } // decimal(18, 4)
		[Column, NotNull    ] public string    CurrencyId                { get; set; } // varchar(50)
		[Column, NotNull    ] public string    CurrencyCode              { get; set; } // nvarchar(50)
		[Column,    Nullable] public string    Note                      { get; set; } // nvarchar(500)
		[Column, NotNull    ] public string    CreatedBy                 { get; set; } // varchar(50)
		[Column, NotNull    ] public string    CreatedByUserName         { get; set; } // nvarchar(255)
		[Column, NotNull    ] public DateTime  CreatedOnUtc              { get; set; } // datetime
		[Column,    Nullable] public string    UpdatedBy                 { get; set; } // varchar(50)
		[Column,    Nullable] public string    UpdatedByUserName         { get; set; } // nvarchar(255)
		[Column,    Nullable] public DateTime? UpdatedOnUtc              { get; set; } // datetime
		[Column, NotNull    ] public bool      Deleted                   { get; set; } // bit
		[Column,    Nullable] public string    DeletedBy                 { get; set; } // varchar(50)
		[Column,    Nullable] public string    DeletedByUserName         { get; set; } // nvarchar(255)
		[Column,    Nullable] public DateTime? DeletedOnUtc              { get; set; } // datetime

		#region Associations

		/// <summary>
		/// FK_OrderDetails_PK_Order
		/// </summary>
		[Association(ThisKey="OrderId", OtherKey="Id", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK_OrderDetails_PK_Order", BackReferenceName="OrderDetails")]
		public SPOrder Order { get; set; }

		#endregion
	}

	public static partial class OPDataConnectionStoredProcedures
	{
		#region sp_alterdiagram

		public static int sp_alterdiagram(this OPDataConnection dataConnection, string @diagramname, int? @owner_id, int? @version, byte[] @definition)
		{
			return dataConnection.ExecuteProc("[dbo].[sp_alterdiagram]",
				new DataParameter("@diagramname", @diagramname, DataType.NVarChar),
				new DataParameter("@owner_id",    @owner_id,    DataType.Int32),
				new DataParameter("@version",     @version,     DataType.Int32),
				new DataParameter("@definition",  @definition,  DataType.VarBinary));
		}

		#endregion

		#region sp_creatediagram

		public static int sp_creatediagram(this OPDataConnection dataConnection, string @diagramname, int? @owner_id, int? @version, byte[] @definition)
		{
			return dataConnection.ExecuteProc("[dbo].[sp_creatediagram]",
				new DataParameter("@diagramname", @diagramname, DataType.NVarChar),
				new DataParameter("@owner_id",    @owner_id,    DataType.Int32),
				new DataParameter("@version",     @version,     DataType.Int32),
				new DataParameter("@definition",  @definition,  DataType.VarBinary));
		}

		#endregion

		#region sp_dropdiagram

		public static int sp_dropdiagram(this OPDataConnection dataConnection, string @diagramname, int? @owner_id)
		{
			return dataConnection.ExecuteProc("[dbo].[sp_dropdiagram]",
				new DataParameter("@diagramname", @diagramname, DataType.NVarChar),
				new DataParameter("@owner_id",    @owner_id,    DataType.Int32));
		}

		#endregion

		#region sp_helpdiagramdefinition

		public static IEnumerable<sp_helpdiagramdefinitionResult> sp_helpdiagramdefinition(this OPDataConnection dataConnection, string @diagramname, int? @owner_id)
		{
			return dataConnection.QueryProc<sp_helpdiagramdefinitionResult>("[dbo].[sp_helpdiagramdefinition]",
				new DataParameter("@diagramname", @diagramname, DataType.NVarChar),
				new DataParameter("@owner_id",    @owner_id,    DataType.Int32));
		}

		public partial class sp_helpdiagramdefinitionResult
		{
			public int?   version    { get; set; }
			public byte[] definition { get; set; }
		}

		#endregion

		#region sp_helpdiagrams

		public static IEnumerable<sp_helpdiagramsResult> sp_helpdiagrams(this OPDataConnection dataConnection, string @diagramname, int? @owner_id)
		{
			return dataConnection.QueryProc<sp_helpdiagramsResult>("[dbo].[sp_helpdiagrams]",
				new DataParameter("@diagramname", @diagramname, DataType.NVarChar),
				new DataParameter("@owner_id",    @owner_id,    DataType.Int32));
		}

		public partial class sp_helpdiagramsResult
		{
			public string Database { get; set; }
			public string Name     { get; set; }
			public int    ID       { get; set; }
			public string Owner    { get; set; }
			public int    OwnerID  { get; set; }
		}

		#endregion

		#region sp_renamediagram

		public static int sp_renamediagram(this OPDataConnection dataConnection, string @diagramname, int? @owner_id, string @new_diagramname)
		{
			return dataConnection.ExecuteProc("[dbo].[sp_renamediagram]",
				new DataParameter("@diagramname",     @diagramname,     DataType.NVarChar),
				new DataParameter("@owner_id",        @owner_id,        DataType.Int32),
				new DataParameter("@new_diagramname", @new_diagramname, DataType.NVarChar));
		}

		#endregion
	}

	public static partial class SqlFunctions
	{
		#region fn_diagramobjects

		[Sql.Function(Name="dbo.fn_diagramobjects", ServerSideOnly=true)]
		public static int? fn_diagramobjects()
		{
			throw new InvalidOperationException();
		}

		#endregion
	}

	public static partial class TableExtensions
	{
		public static Dispatch Find(this ITable<Dispatch> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static DispatchBag Find(this ITable<DispatchBag> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static Event Find(this ITable<Event> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static Payable Find(this ITable<Payable> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static Payment Find(this ITable<Payment> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static Receivable Find(this ITable<Receivable> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static Shipment Find(this ITable<Shipment> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ShipmentCargoAddService Find(this ITable<ShipmentCargoAddService> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ShipmentItem Find(this ITable<ShipmentItem> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static SPOrder Find(this ITable<SPOrder> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static SPOrderCargoAddService Find(this ITable<SPOrderCargoAddService> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static SPOrderDetail Find(this ITable<SPOrderDetail> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}
	}
}

#pragma warning restore 1591
